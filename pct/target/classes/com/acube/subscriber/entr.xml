<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.acube.sub.repository.SubscriberServiceRepository">
	
	<select id="getCustNo" resultType="string" parameterType="string">
		SELECT
        		DISTINCT A.CUST_NO 
	      FROM  ABA_SB_ENTR A
	           ,ABA_SB_ENTR_CNTC CN
		       ,ABA_SB_ESTB_ADDR B
		       ,ABA_SB_CNVG C
		       ,(SELECT * FROM ABA_CS_HB_CUST WHERE 1=1) D
		 WHERE 1=1
		   AND A.entr_no = CN.entr_no
		   AND A.ACENO = CN.ACENO
		   AND A.ESTB_ADDR_NO = B.ESTB_ADDR_NO(+)
		   AND A.ENTR_NO = C.ENTR_NO(+)
		   AND (NVL(C.CNVG_STTS_CD, '1') = '1'
		   		OR (A.ENTR_STTS_CD IN ('C') AND C.CNVG_STTS_CD = 'C' )
		   		OR (A.ENTR_STTS_CD IN ('A', 'S', 'T', 'R') AND C.CNVG_STTS_CD in ('A', 'T', 'R') )
		   		)
		   AND A.CUST_NO = D.CUST_NO
		   AND A.PROD_NO        = #{searchEntrNo, jdbcType=VARCHAR}                   
	   	   AND A.ENTR_STTS_CD != 'C'
	</select>
	
	<select id="getCustAndEntrList" resultType="AsSearchCustEntrVO" parameterType="AsSearchFilter">
		with subs as (
	    SELECT	 
		   A.ENTR_NO                                        		         AS entrNo
	      ,A.PROD_NO                                        		         AS prodNo
	      ,A.IMSI_NO														 AS imsiNo
	      ,A.ACENO                                          		         AS aceno
	      ,A.BILL_ACNT_NO                                                    AS billAcntNo
	      ,A.SVC_CD                                                          AS svcCd
	      ,FC_LOOKUP_NAME (A.SVC_CD, 'SvcDomain','en')      AS svcNm
	      ,A.CUST_NO                                                         AS custNo
	     
	      ,D.CUST_NM                                                         AS custNm
	      ,D.CUST_NM1                                                        AS custNm1
	      ,D.CUST_NM2                                                        AS custNm2
	      ,D.CUSTRNM_NO                                                      AS custrnmNo
	      ,D.BS_REG_NO                                                       AS bsRegNo
	      ,D.BIZ_COMP_NM                                                     AS bizRegNm
	      ,TO_CHAR(A.FRST_ENTR_DTTM, 'YYYYMMDDHH24MISS')                     AS frstEntrDttm
	      ,A.ENTR_STTS_CD                                                    AS entrSttsCd
	      ,FC_LOOKUP_NAME (A.ENTR_STTS_CD, 'SttsCd','en')   AS entrSttsNm
	      ,CN.LTPYM_STTS_CD                                                  AS ocsSttsCd
	      ,FC_LOOKUP_NAME (CN.LTPYM_STTS_CD, 'OcsSubStatus','en') AS ocsSttsNm
	      ,TO_CHAR(A.ENTR_CHNG_DTTM, 'YYYYMMDDHH24MISS')                     AS entrChngDttm
	      ,ENTR_STTS_CHNG_RSN_CD                            				 AS entrSttsChngRsnCd
	      ,FC_LOOKUP_NAME (A.ENTR_STTS_CHNG_RSN_CD, 'EventCd','en')      		AS entrSttsChngRsnNm
	      ,ENTR_STTS_CHNG_RSN_DTL_CD                        			     AS entrSttsChngRsnDtlCd
	      ,FC_LOOKUP_NAME (A.ENTR_STTS_CHNG_RSN_DTL_CD, 'EventDtlCd','en')     AS entrSttsChngRsnDtlNm
	      ,A.ESTB_ADDR_NO
	      ,B.FULL_ADDR                                     					 AS fullAddr
	      ,A.PPAY_ENTR_DV_CD                               					 AS ppayEntrDvCd
	      ,FC_LOOKUP_NAME (A.PPAY_ENTR_DV_CD, 'NumberType','en')   			AS ppayEntrDvNm
	      ,DECODE(C.cnvg_stts_cd, 'C', '', C.CNVG_NO)            			 AS cnvgNo
	      ,DECODE(C.cnvg_stts_cd, 'C', '', C.CNVG_KD_CD)                     AS cnvgKdCd
	      ,CASE WHEN C.cnvg_stts_cd != 'C' AND C.CNVG_KD_CD IS NOT NULL THEN
	       	 (SELECT prod_name FROM ABA_PD_PRODUCT WHERE prod_cd = C.CNVG_KD_CD)
	       ELSE
	       ''
	       END AS cnvgKdNm
	       ,( select /*+ INDEX_DESC(P XPK_ABA_SB_SVC_BY_ENTR) */  PD.PROD_NAME
				from ABA_SB_SVC_BY_ENTR P, ABA_PD_PRODUCT PD
				where 1=1
				AND P.SVC_KD_CD IN ('01', '04')
				AND P.PROD_CD = PD.PROD_CD
				AND P.ENTR_NO = A.ENTR_NO
				and rownum = 1
		  )	AS prodNm
	      ,A.RLUSR_CUST_NO                                    			     AS rlusrCustNo
	      ,(SELECT CUST_NM || ' ' || CUST_NM1 || ' ' || CUST_NM2 FROM ABA_CS_HB_CUST WHERE cust_no = a.RLUSR_CUST_NO )     AS rlusrCustNm
	 
	      FROM  ABA_SB_ENTR A
	      	   ,ABA_SB_ENTR_CNTC CN
		       ,ABA_SB_ESTB_ADDR B
		       ,ABA_SB_CNVG C
		       ,(SELECT * FROM ABA_CS_HB_CUST WHERE 1=1)D
		 WHERE 1=1
		  
			AND A.entr_no = CN.entr_no
		 	AND A.ACENO = CN.ACENO
		   	AND A.ESTB_ADDR_NO = B.ESTB_ADDR_NO(+)
		   	AND A.ENTR_NO = C.ENTR_NO(+)
		   	AND (NVL(C.CNVG_STTS_CD, '1') = '1'
		   		OR (A.ENTR_STTS_CD IN ('C') AND C.CNVG_STTS_CD = 'C' )
		   		OR (A.ENTR_STTS_CD IN ('A', 'S', 'T', 'R') AND C.CNVG_STTS_CD in ('A', 'T', 'R') )
		   		)
		   	AND A.CUST_NO = D.CUST_NO
		   	AND D.CUST_NO     =   #{filterMap.custNo}
		    AND A.ENTR_STTS_CD != 'C'
  	   		AND A.ENTR_NO = #{filterMap.entrNo}
		   ORDER BY A.SVC_CD, A.ENTR_STTS_CD, A.FRST_ENTR_DTTM DESC
     ), subsList as (
			SELECT decode(cnv.entr_no, null,null,decode(sub1.svccd,'1',null,sub1.cnvgno)) asParent
			      ,decode(cnv.entr_no, null,'0',decode(sub1.svccd,'1','0','1')) asLevel
			      ,decode(cnv.entr_no, null,'true',decode(sub1.svccd,'1','false','true')) asLeaf
			      ,'false' asExpanded
			      ,sub1.*
			FROM subs sub1
			     ,ABA_SB_CNVG cnv
			WHERE sub1.entrno = cnv.entr_no(+)
			
		) 
		SELECT DISTINCT *
		FROM subsList
		WHERE 1=1
	</select>
	
	<select id="getContractBillInfo" resultType="AsEntrContractBill"  parameterType="string">
		SELECT 
			 ENTR.ENTR_NO 				                                                                   as entrNo
			,ENTR.PROD_NO				                                                                   as prodNo
			,ENTR.ACENO					                                                                   as aceno
			,ENTR.SVC_CD				                                                                   as svcCd
			,ENTR.PPAY_ENTR_DV_CD		                                                                   as ppayEntrDvCd
			,FC_LOOKUP_NAME (ENTR.SVC_CD, 'SvcDomain','en') 			                                   as svvNm
			,ENTR.CUST_NO				                                                                   as custNo
			,CUST.CUST_NM                                                                                  as custNm
			,CUST.CUST_NM1                                                                                 as custNm1
			,CUST.CUST_NM2                                                                                 as custNm2
			,CUST.CUST_NM || ' ' || CUST.CUST_NM1 || ' ' || CUST.CUST_NM2                                  as custFullNm
            ,CUST.CUST_DV_CD                                                                               as custDvCd
            ,(SELECT  MEANING 
                FROM  ABA_CO_FND_LOOKUP_VALUES SVC_CODE 
               WHERE  SVC_CODE.CCODE = CUST.CUST_DV_CD 
                 AND  CCODE_GROUP = 'CustDvCd' 
                 AND  LANGUAGE = 'en' )                                                                    as custDvNm
            ,CUST.CUST_KD_CD                                                                               as custKdCd
            ,FC_LOOKUP_NAME (CUST.CUST_KD_CD, 'CustKdCd','en')                                             as custKdNm
            ,CUST.CUSTRNM_NO                                                                               as custrnmNo
            ,CUST.BS_REG_NO                                                                                as bsRegNo
            ,CUST.BIZ_COMP_NM                                                                              as bizCompNm
            ,CUST.BIZ_REPT_NM                                                                              as bizReptNm
            ,CUST.EMAIL_ADDR                                                                               as emailAddr
            ,ENTR.VPN_REP_NO_YN			                                                                   as vpnRepNoYn
			,ENTR.RLUSR_CUST_NO			                                                                   as rlusrCustNo
	        ,(SELECT  CUST.CUST_NM || ' ' || CUST.CUST_NM1 || ' ' || CUST.CUST_NM2 
	            FROM  ABA_CS_HB_CUST CUST1 
	           WHERE  CUST1.CUST_NO = ENTR.RLUSR_CUST_NO )                                                 as rlusrCustFullNm
	        ,TO_CHAR(ENTR.ENTR_CHNG_DTTM, 'YYYY-MM-DD')                                                    as chngDttm
	        ,TO_CHAR(ENTR.FRST_ENTR_DTTM, 'YYYY-MM-DD')                                                    as frstDttm
	        ,ENTR.ENTR_STTS_CD			                                                                   as entrSttsCd
	        ,FC_LOOKUP_NAME (ENTR.ENTR_STTS_CD, 'SttsCd','en') 				                               as entrSttsNm
	        ,ENTR.ENTR_STTS_CHNG_RSN_CD                                                                    as entrSttsChngRsnCd
	        ,FC_LOOKUP_NAME (ENTR.ENTR_STTS_CHNG_RSN_CD, 'EventCd','en') 	                               as entrSttsChngRsnNm
	        ,ENTR.ENTR_STTS_CHNG_RSN_DTL_CD                                                                AS entrSttsChngRsnDtlCd
	        ,FC_LOOKUP_NAME (ENTR.ENTR_STTS_CHNG_RSN_DTL_CD, 'EventDtlCd','en') 			               as entrSttsChngRsnDtlNm
	        ,ENTR.ENTR_DLR_CD			                                                                   as entrDlrCd
	        ,(SELECT DLR_NM FROM ABA_RV_DLR_MSTR WHERE DLR_CD = ENTR.ENTR_DLR_CD AND DLR_STTS_DV_CD = 'A') as dlrCd 
	        ,ENTR.MGMT_DLR_CD 			                                                                   as mgmtDlrCd
	        ,ENTR.MARKET_CODE 			                                                                   as marketCode
	        ,TO_CHAR(ENTR.ENTR_STTS_CHNG_DTTM, 'YYYY-MM-DD')                                               as sttsChngDttm
	        ,ENTR.HOMECD_NO				                                                                   as homecdNo
	        ,ENTR.ESTB_ADDR_NO			                                                                   as estbAddrNo
	        ,ENTR.IMSI_NO				                                                                   as imsiNo
	        ,ENTR.MIN_NO				                                                                   as minNo
	        ,ENTR.PPAY_ENTR_DV_CD		                                                                   as ppayEntrDvCd
	        ,FC_LOOKUP_NAME (ENTR.PPAY_ENTR_DV_CD		, 'NumberType','en')                               as ppayEntrDvNm
	        ,ENTR.SPRT_RTNG_YN                                                                             as sprtRtngYn
	        ,ENTR.HPNO					                                                                   as hpno
	        ,ENTR.INDC_ID				                                                                   as indcId
	        ,ENTR.MNGR_ID				                                                                   as mngrId
	        ,ENTR.REQ_DATE				                                                                   as reqDate
	        ,ENTR.BILL_ACNT_NO			                                                                   as billAcntNo
	        ,BILL.BILL_ADDR_SEQNO		                                                                   as billAddrSeqno
	        ,BILL.CNTCT_PNT_SEQNO		                                                                   as billCntctPntSeqno
	        ,BILL.PYM_MTHD_CD			                                                                   as pymMthdCd
	        ,FC_LOOKUP_NAME (BILL.PYM_MTHD_CD, 'BillPymMethod','en') 			                           as pymMthdNm
		    ,BILL.BANK_CD				                                                                   as bankCd
		    ,FC_LOOKUP_NAME (BILL.BANK_CD, 'BankCd','en') 			                                       as bankNm
		    ,BILL.CDCMP_CD				                                                                   as cdcmpCd
		    ,FC_LOOKUP_NAME (BILL.CDCMP_CD, 'CardCd','en') 			                                       as cdcmpNm
		    ,BILL.CARD_VALD_END_YYMM	                                                                   as cardValdEndYymm
		    ,BILL.PYM_CUST_NM			                                                                   as pymCustNm
		    ,BILL.PYM_CUST_SSN			                                                                   as pymCustSsn
		    ,BILL.ACCT_NO				                                                                   as acctNo
		    ,BILL.CARD_NO				                                                                   as cardNo
		    ,BILL.BLTXT_RCPT_MAN_NM		                                                                   as bltxtRcptManNm
		    ,BILL.BLTXT_KD_CD			                                                                   as bltxtKdCd
		    ,FC_LOOKUP_NAME (BILL.BLTXT_KD_CD, 'BltxtKdCd','en') 			                               as bltxtKdNm
		    ,BILL.BILL_EMAIL_ADDR		                                                                   as billEmailAddr
		    ,BILL.BILL_ACNT_STTS_CD		                                                                   as billAcntSttsCd
		    ,FC_LOOKUP_NAME (BILL.BILL_ACNT_STTS_CD, 'SttsCd','en') 			                           as billAcntSttsNm
		    ,BILL.ACNT_BLNC				                                                                   as acntBlnc
		    ,BILL.BILL_CYCL_CD			                                                                   as billCyclCd
		    ,BILL.BILL_CUR_CD 			                                                                   as billCurCd
		    ,BILL.MRKT_CD			                                                                       as mrktCd
		    ,FC_LOOKUP_NAME (BILL.BILL_CUR_CD, 'BillCurCd','en') 			                               as billCurNm
            ,BILL.MINIMUM_CHARGE                                                                           as mininumCharge
            ,BILL.MINIMUM_MONTH                                                                            as mininumMonth
            ,ENTR.RQST_STTS_CD                                                                             as entrRqstSttsCd
            ,TO_CHAR(ENTR.ENTR_REQ_DATE, 'YYYY-MM-DD')                                                     as entrEntrReqDate
            ,ENTR.RQST_STTS_CHNG_RSN_CD                                                                    as entrRqstSttsChngRsnCd
            ,ENTR.RQST_STTS_CHNG_RSN_DTL_CD                                                                as entrRqstSttsChngRsnDtlCd
            ,BILL.RQST_STTS_CD                                                                             as billRqstSttsCd
            ,trim(CNTC.LTPYM_STTS_CD)                                                                      as ltpymSttsCd
            ,FC_LOOKUP_NAME (trim(CNTC.LTPYM_STTS_CD), 'LtpymSttsCd','en') 			                       as ltpymSttsNm
            ,TO_CHAR(CNTC.LTPYM_STTS_CHNG_DT, 'YYYY-MM-DD')                                                as ltpymSttsChngDt
            ,ESTB.mdu_ip                                                                                   as mduIp
            ,ESTB.mdu_port                                                                                 as mduPort
            ,PSWD.USER_ID                                                                                  AS userId
            ,PSWD.CUST_PSWD                                                                                AS custPswd
            ,CUST.POSITION                                                                                 AS position
            ,ADDR.FULL_ADDR					                                                               as fullAddr
            ,CASE WHEN CUST_SEX_DV_CD = 1 THEN 'Male' ELSE 'Female' END                                    AS custGender
            ,TO_CHAR(TO_DATE(CUST_BDAY,'yyyymmdd'),'yyyy/mm/dd')                                           AS custBday
			FROM ABA_SB_ENTR ENTR 
			    ,ABA_SB_BILL_ACNT BILL
                ,ABA_CS_HB_CUST CUST
                ,ABA_SB_ENTR_CNTC CNTC
                ,ABA_SB_ESTB_ADDR ESTB
                ,ABA_SB_PSWD_BY_ENTR PSWD
                ,ABA_CS_HB_CUST_ADDR ADDR
		WHERE ENTR.ENTR_NO = #{searchEntrNo, jdbcType=VARCHAR}
		AND ENTR.CUST_NO = CUST.CUST_NO
		AND ENTR.BILL_ACNT_NO = BILL.BILL_ACNT_NO
		AND CNTC.ENTR_NO = ENTR.ENTR_NO
		AND CNTC.ACENO = ENTR.ACENO
		AND CNTC.BILL_ACNT_NO = ENTR.BILL_ACNT_NO
		AND ENTR.ESTB_ADDR_NO = ESTB.ESTB_ADDR_NO(+)
		AND CUST.CUST_NO 	 = ADDR.CUST_NO(+)
        AND CUST.CUST_NO = PSWD.CUST_NO(+)
	</select>
	
	<select id="getDeviceList" parameterType="AsSearchFilter" resultType="AsEntrDevice">
		SELECT   DEV.ENTR_NO			                              AS entrNo
		        ,DEV.DEV_BY_ENTR_SEQNO	                              AS devByEntrSeqno
		        ,DEV.ACENO				                              AS aceno
		        ,DEV.DEVC_MDL_CD		                              AS devcMdlCd
		        ,MDL.DEVC_MDL_NM 		                              AS devcMdlNm
		        ,DEV.DEVC_STTS_CD		                              AS devcSttsCd
		        ,FC_LOOKUP_NAME(DEV.DEVC_STTS_CD, 'SttsCd', 'en')     AS devcSttsNm
		        ,DEV.SBGN_MDL_CD 		                              AS sbgnMdlCd
		        ,SBGN_MDL.DEVC_MDL_NM 	                              AS sbgnDevcMdlNm
		        ,DEV.DEVC_NO			                              AS devcNo
		        ,TO_CHAR(DEV.DEV_RGST_DT, 'YYYY-MM-DD HH24:MI') 	  AS devRgstDt
		        ,DECODE(DEV.EQIP_SALE_CD, 2, TO_CHAR(ADD_MONTHS(DEV.DEV_RGST_DT, DEV.INSTT_MNBR), 'YYYY-MM-DD HH24:MI'), '') 	  AS leaseEndDt
		        ,CASE WHEN dev.eqip_sale_cd ='2' THEN nvl(instt.rmnd_instt_mnbr,0) ELSE NULL END monthRemainLease
    			,CASE WHEN dev.eqip_sale_cd ='2' THEN nvl(instt.instt_sale_amt,0) - ((NVL(instt.instt_mnbr,0) - NVL(instt.rmnd_instt_mnbr,0))* NVL(instt.month_instt_amt,0)) ELSE NULL END remainLeaseAmt
		        ,TO_CHAR(DEV.DEV_VALD_END_DT , 'YYYY-MM-DD HH24:MI')  AS devValdEndDt
		        ,DEV.LAST_YN			                              AS lastYn
		        ,DEV.DEV_HIST_YN		                              AS devHistYn
		        ,DEV.DEV_CHNG_RSN_CD	                              AS devChngRsnCd
		        ,DEV.PRSS_DLR_CD		                              AS prssDlrCd
		        ,FC_DLR_NM(DEV.PRSS_DLR_CD) 						  AS prssDlrNm
		        ,DEV.EQIP_SALE_CD	  								  AS eqipSaleCd
		        ,FC_LOOKUP_NAME(DEV.EQIP_SALE_CD, 'DevSaleType','en') AS eqipSaleNm
		        ,DEV.EQIP_CLSS_CD		                              AS eqipClssCd
		        ,MDL_CLSS.CLSS_NM		                              AS classNm
		        ,DEV.EQIP_USE_DV_CD		                              AS eqipUseDvCd
		        ,NVL(DEV.SALE_AMT, 0) 						   	      AS saleAmt
		        ,DEV.INSTT_MNBR                                       AS insttMnbr
		        ,DEV.EQIP_RTURN_DV_CD                                 AS eqipRturnDvCd
		        ,DEV.RTGD_YN                                          AS rtgdYn
		        ,DEV.PNLT_EXMPT_YN                                    AS pnltExmptYm
		        ,DEV.ESTB_COST_EXMPT_YN                               AS estbCostExmptYn
		        ,DEV.BFR_DEV_BY_ENTR_SEQNO                            AS bfrDevByEntrSeqno
		        ,DEV.INTG_BIZ_CD                                      AS intgBizCd
		        ,DEV.ICCID_NO                                         AS iccidNo
		        ,NVL(DEV.DLVR_AMT, 0) 								  AS dlvrAmt
		        ,DEV.LTE_ROAM_IMSI                                    AS lteRoamImsi
		        ,NVL(DEV.CASH_SALE_AMT, 0)                            AS cashSaleAmt
		        ,NVL(DEV.CARD_SALE_AMT, 0)                            AS cardSaleAmt
		        ,NVL(DEV.INSTT_SALE_AMT, 0)                           AS insttSaleAmt
		        ,DEV.USIM_RUSE_YN                                     AS usimRuseYn
		        ,DEV.CPN_NO                                           AS cpnNo
		        ,NVL(DEV.DEV_CPN_DSCNT_AMT, 0) 						  AS devCpnDscntAmt
		        ,DEV.AGMT_MNBR                                        AS agmtMnbr
		        ,DEV.AGMT_DV_CD                                       AS agmtDvCd
		        ,DEV.RENT_MNBR 										  AS rentMnbr
		        ,'' 												  AS serialNumber
		        ,DEV.DSCNT_PLCY_NO 									  AS dscntPlcyNo
		  FROM  ABA_DV_DEV_BY_ENTR DEV
		       ,ABA_RE_MDL_CD MDL
		       ,ABA_RE_MDL_CD SBGN_MDL
		       ,ABA_RE_MDL_CLSS MDL_CLSS
		       ,ABA_RE_RESOURCE_MSTR MSTR
		       ,ABA_DV_INSTT_BY_ENTR instt
		 WHERE DEV.ENTR_NO IN (
		 		SELECT #{filterMap.entrNo} FROM DUAL
				UNION
				SELECT b.entr_no FROM aba_sb_cnvg a,  aba_sb_cnvg b
				WHERE a.entr_no = #{filterMap.entrNo}
				AND a.cnvg_no = b.cnvg_no
				AND a.svc_cd = '1'
		   )
		   AND DEV.DEVC_NO = MSTR.DEVC_NO
		   AND DEV.DEVC_MDL_CD = MDL.DEVC_MDL_CD
		   AND DEV.SBGN_MDL_CD = SBGN_MDL.DEVC_MDL_CD(+)
		   AND DEV.EQIP_CLSS_CD = MDL_CLSS.CLSS_CD(+)
		   AND dev.entr_no = instt.entr_no (+)
		   AND dev.dev_by_entr_seqno = instt.dev_by_entr_seqno(+)
		   <!-- AND DEV.DEVC_STTS_CD = 'A'
		   AND NVL( DEV.DEV_VALD_END_DT,TO_DATE('99991231','YYYYMMDD') )   <![CDATA[ > ]]>  TO_DATE('20121021','YYYYMMDD') -->
		   AND (
		   		(DEV.DEVC_STTS_CD != 'C' )
		   		or
		   		(DEV.DEVC_STTS_CD = 'C' AND  DEV.DEV_CHNG_RSN_CD ='CAN')
		   )
		   ORDER BY MDL.svc_Type
	</select>
	
	<select id="getProductByEntrNoList" parameterType="AsSearchFilter" resultType="AsEntrProduct">
		SELECT  A.ENTR_NO													AS entrNo
		        ,A.ENTR_SVC_SEQNO											AS entrSvcSeqno
		        ,A.SVC_CD													AS svcCd
		        ,FC_LOOKUP_NAME(A.SVC_CD, 'SvcDomain','en')  	AS svcNm
		        ,A.PROD_CD													AS prodCd
		        ,B.PROD_NAME												AS prodName
 		        ,A.HPOS_PROD_CD												AS hposProdCd
		        ,DECODE(A.ENTR_SVC_SEQNO, A.HPOS_ENTR_SVC_SEQNO, 'Y', 'N') 	AS parentYn
		        ,A.HPOS_ENTR_SVC_SEQNO										AS hposEntrSvcSeqno	
		        ,A.SVC_KD_CD												AS svcKdCd
		        ,FC_LOOKUP_NAME(A.SVC_KD_CD, 'CsPrdType', 'en') AS svcKdNm
		        ,A.SVC_DTL_CD												AS svcDtlCd
		        ,A.SVC_STTS_CD												AS svcSttsCd
		        ,FC_LOOKUP_NAME(A.SVC_STTS_CD, 'SttsCd','en')	AS svcSttsNm
		        ,TO_CHAR(A.SVC_STTS_CHNG_DTTM, 'YYYYMMDDHH24MISS')  		AS svcSttsChngDttm
		        ,TO_CHAR(A.SVC_FRST_STRT_DTTM, 'YYYYMMDD') 					AS svcFrstStrtDttm
		        ,TO_CHAR(A.SVC_STRT_DTTM, 'YYYYMMDDHH24MISS') 				AS svcStrtDttm
		        ,A.SVC_STRT_RSN_CD											AS svcStrtRsnCd
		        ,TO_CHAR(A.SVC_STRT_RGST_DTTM, 'YYYYMMDDHH24MISS') 			AS svcStrtRgstDttm
		        ,TO_CHAR(A.SVC_END_DTTM, 'YYYYMMDD') 						AS svcEndDttm
		        ,A.SVC_END_RSN_CD											AS svcEndRsnCd
		        ,TO_CHAR(A.SVC_END_RGST_DTTM, 'YYYYMMDDHH24MISS') 			AS svcEndRgstDttm
		        ,TO_CHAR(A.SVC_DUTY_USE_STRT_DT, 'YYYYMMDD') 				AS svcDutyUseStrtDt
		        ,TO_CHAR(A.SVC_DUTY_USE_END_DT, 'YYYYMMDD') 				AS svcDutyUseEndDt
		        ,A.SVC_DUTY_USE_MNTH_CNT									AS svcDutyUseMnthCnt
		        ,A.SVC_DUTY_USE_DV_CD				                        AS svcDutyUseDvCd
		        ,A.TRSTN_NO							                        AS trstnNo
		        ,A.BILL_ACNT_NO						                        AS billAcntNo
		        ,A.SVC_GRP_CD						                        AS svcGrpCd
		        ,A.SVC_RELS_DV_CD					                        AS svcRelsDvCd
		        ,A.NDBL_CVRT_SVC_CD					                        AS ndblCvrtSvcCd
		        ,A.RSV_END_YN						                        AS rsvEndYn
		        ,A.RSV_END_DT						                        AS rsvEndDt
		        ,A.SVC_GRP_SEQNO					                        AS svcGrSeqno
		        ,TO_CHAR(A.RTNG_STRT_DTTM, 'YYYYMMDDHH24MISS') 				AS rtngStrtDttm
		        ,TO_CHAR(A.RTNG_END_DTTM, 'YYYYMMDDHH24MISS') 				AS rtngEndDttm
		        ,A.APLY_LVL_CD												AS aplyLvlCd
		        ,TO_CHAR(A.SBGN_CHNG_APNT_DT, 'YYYYMMDD') 					AS sbgnChngApntDt
		        ,A.ACENO													AS aceno
		        ,A.DEV_BY_ENTR_SEQNO										AS devByEntrSeqno
		        ,A.PRPAY_YN													AS prpayYn
		        ,A.NDBL_ENTR_SVC_SEQNO										AS ndblEntrSvcSeqno
		        ,A.LAST_INDC_ID												AS lastIndcId
		        ,A.SVC_STRT_RGST_DLR_CD 									AS svcStrtRgstDlrCd
		        ,FC_DLR_NM(A.SVC_STRT_RGST_DLR_CD) 							AS svcStrtRgstDlrNm
		        ,TO_CHAR(A.PROD_CUST_HOPE_DT, 'YYYYMMDD') 					AS prodCustHopeDt
		        ,A.PROD_DV_CD    											AS prodDvCd   
		        ,A.DSCNT_PLCY_NO 											AS dscntPlcyNo
		        ,TREATMENT                                                  AS treatment
		        , (case when a.prod_dv_cd = 'VAS' and a.prod_cd != a.hpos_prod_cd then '0' else a.monthly_fee end) AS monthlyFee
		        ,decode(threshold_yn, 1, 'Y', 'N')                          AS treatmentYn	
		        ,decode(treatment_yn, 1, 'Y', 'N')	                        AS thresholdYn	
		        ,limit_day	                                                AS limitDay	
                ,RQST_STTS_CD                                               AS rqstSttsCd
                ,A.loan_password                                            AS loanPassword
		  FROM  ABA_SB_SVC_BY_ENTR A
		       ,ABA_PD_PRODUCT B
		 WHERE A.ENTR_NO IN (
		 		SELECT #{filterMap.entrNo} FROM DUAL
				UNION
				SELECT b.entr_no 
				FROM aba_sb_cnvg a,  aba_sb_cnvg b
				WHERE a.entr_no = #{filterMap.entrNo}
				AND a.cnvg_no = b.cnvg_no
				AND a.svc_cd = '1'
				AND a.cnvg_kd_cd = b.cnvg_kd_cd
		   )
		   AND a.entr_svc_seqno IN (
		   	SELECT /*+ INDEX_DESC(ABA_SB_SVC_BY_ENTR XPK_ABA_SB_SVC_BY_ENTR) */  entr_svc_seqno
				FROM ABA_SB_SVC_BY_ENTR
				WHERE 1=1
				AND SVC_KD_CD IN ('01', '04')
				AND entr_no  = a.entr_no
				AND (
			   		(SVC_STTS_CD != 'C' )
			   		OR
			   		(SVC_STTS_CD = 'C' AND  SVC_END_RSN_CD ='CAN')
			    )
				AND ROWNUM = 1
                UNION ALL
                	SELECT /*+ INDEX_DESC(ABA_SB_SVC_BY_ENTR XPK_ABA_SB_SVC_BY_ENTR) */  entr_svc_seqno
				FROM ABA_SB_SVC_BY_ENTR
				WHERE 1=1
				AND SVC_KD_CD NOT IN ('01', '04')
				AND entr_no  = a.entr_no
				AND (
			   		(SVC_STTS_CD != 'C' )
			   		OR
			   		(SVC_STTS_CD = 'C' AND  SVC_END_RSN_CD ='CAN')
			    )
		   )
		   AND A.SVC_CD = B.SVC_DOMAIN
		   AND A.PROD_CD = B.PROD_CD
		   <!-- AND NVL( A.SVC_END_DTTM,TO_DATE('99991231235959','YYYYMMDDHH24MISS') ) > SYSDATE --> 
		   AND (
		   		(A.SVC_STTS_CD != 'C' )
		   		OR
		   		(A.SVC_STTS_CD = 'C' AND  A.SVC_END_RSN_CD ='CAN')
		   )
		   ORDER BY A.SVC_CD, SVCKDCD, SVC_STRT_DTTM
	</select>
	
		<!-- get Deposit -->
	<select id="getDepositThresholdByEntrNo" parameterType="AsSearchFilter" resultType="AsDepositGroup">
		SELECT A.PROD_CD                 AS prodCd
		      ,D.PROD_NAME               AS prodName
		      ,C.FTR_NAME                AS ftrName
		      ,B.DEPOSIT                 AS deposit
		      ,B.THRESHOLD               AS threshold
		  FROM ABA_SB_SVC_BY_ENTR A,
		       ABA_SB_ETBY_SVC_CHRG B,
		       ABA_PD_FTR C,
		       ABA_PD_PRODUCT D
		 WHERE A.ENTR_NO = #{filterMap.entrNo}
		   AND A.ENTR_NO = B.ENTR_NO
		   AND A.ENTR_SVC_SEQNO = B.ENTR_SVC_SEQNO
		   AND B.SVC_DSCNT_CD = C.FTR_CD
		   AND A.PROD_CD = D.PROD_CD
		   AND B.SVC_STTS_CD = 'A'
		   AND B.DEPOSIT IS NOT NULL
		   <!-- AND NVL( B.SVC_END_DTTM,TO_DATE('99991231235959','YYYYMMDDHH24MISS') )  > SYSDATE -->
		   AND (
		   		(A.SVC_STTS_CD != 'C' )
		   		or
		   		(A.SVC_STTS_CD = 'C' AND  A.SVC_END_RSN_CD ='CAN')
		   )
	</select>
</mapper>