<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">  
<mapper namespace="com.acube.unitel.pdh.product.repository.ProductPdhRepository">
	<sql id="productListColumn">
		PROD_CD                                      AS         prodCd
		,MRKT_CD                                     AS 		mrktCd
		,MRKT_CD || ' ' || FC_LOOKUP_NAME(MRKT_CD,'SvcOperator','en') AS             mrktNm  
		,FC_LOOKUP_NAME(SVC_DOMAIN,'SvcDomain','en') AS         svcDomain  
		,PROD_DV_CD                                  AS 		prodDvCd
        ,PROD_DV_CD || ' ' || FC_LOOKUP_NAME(PROD_DV_CD,'BillType','en') AS             prodDvNm 
		,PROD_KD_CD                                  AS 		prodKdCd
        ,PROD_DV_CD || ' ' || FC_LOOKUP_NAME(PROD_KD_CD,'CsPrdType','en') AS              prodKdNm
		,PROD_KD_DTL_CD                              AS 		prodKdDtlCd 
        ,PROD_DV_CD || ' ' || FC_LOOKUP_NAME(PROD_KD_DTL_CD,'PROD_KD_DTL_CD','en') AS   prodKdDtlNm  
		,CUST_DV_CD                                  AS 		custDvCd  
        ,CUST_DV_CD || ' ' || FC_LOOKUP_NAME(CUST_DV_CD,'CustDvCd4Prod','en') AS        custDvNm     
		,VERSION                                     AS 		version      
		,TO_CHAR(SALE_STRT_DTTM, 'YYYY-MM-DD HH24:MI:SS')        AS 		saleStrtDttm 
		,TO_CHAR(SALE_END_DTTM , 'YYYY-MM-DD HH24:MI:SS')        AS 		saleEndDttm  
		,PROD_ID_CD                                  AS 		prodIdCd
		,PROD_NAME                                   AS 		prodName
		,PRODUCT_ALIAS_MN                            AS 		prodAliasName_mn
		,PRODUCT_ALIAS_EN                            AS 		prodAliasName_en
		,VALD_STRT_DT                                AS 		valdStrtDt
		,VALD_END_DT                                 AS 		valdEndDt
		,PROD_PRTY                                   AS 		prodPrty
		,PROD_STATE_CD                               AS 		prodStateCd
		,PROD_STATE_CD || ' ' || FC_LOOKUP_NAME(PROD_STATE_CD,'PrdStatus','en') AS   prodStateNm
		,DSCR                                                                                      AS                            dscr
		,IS_BUNDLE                                                                                 AS                            isBundle
		,BILLING_CYCLE                                                                             AS                            billingCycle
		,MPS_DOMAIN                                                                                AS                            mpsDomain
		,DEFERRED_FLAG                                                                             AS                            deferredFlag
		,CUG_FLAG                                                                                  AS                            cugFlag
		,DISC_DSCR                                                                                 AS                            discDscr
		,BONUS_DSCR                                                                                AS                            bounsDscr
		,TARIFF_DSCR                                                                               AS                            tariffDscr
		,CONTRACT_PERIOD                                                                           AS                            contractPeriod
		,TREATMENT_PRICE                                                                           AS                            treatementPrice
		,TREATMENT_DAY                                                                             AS                            treatmentDay
		,PARENT_PRODUCT_CD                                                                         AS                            parentProductCd
		,RSV_REG_DAY								                                               AS                            rsvRegDay
		,AUTO_EXP_DAY								                                               AS                            autoExpDay
		,PAID_CHG_DAY								                                               AS                            paidChgDay
		,BUNDLE_DEPOSIT_YN							                                               AS                            bundleDepositYn
		,ZONE_FLAG									                                               AS                            zoneFlag
		,SMS_PERIOD								                                                   AS                            smsPeriod
		,SHOT_PROD_NM								                                               AS                            shotProdNm
		,EXT_PROD_CD								                                               AS                            extProdCd
		,CURRENCY																				   AS							 currency	
		,FC_LOOKUP_NAME(CURRENCY,'Currency','en')												   AS							 currencyMeanining
		,PRODUCT_SUB_TYPE																		   AS							 productSubType	
		,FC_LOOKUP_NAME(PRODUCT_SUB_TYPE,'PrdSubType','en')										   AS							 productSubTypeMeaning
		,NEXT_JOIN_PRODUCT																		   AS                            nextJoinProduct
		,EXPIRE_DATE														   					   AS							 expireDate
		,(CASE WHEN EXPIRE_DATE_TYPE = '1' THEN 'Day'
			   WHEN EXPIRE_DATE_TYPE = '2' THEN 'Month' 
			   ELSE	''
		  END)																					   AS 							 expireDateType
		,NEXT_JOIN_CONFIRM																		   AS 							 nextJoinConfirm	
		,(CASE  WHEN NEXT_JOIN_CONFIRM = '0' THEN 'No'
				WHEN NEXT_JOIN_CONFIRM = '1' THEN 'Yes'
				ELSE ''
		  END) AS							 nextJoinConfirmYn
		, resubscription_flag AS resubscriptionFlag
	</sql>
	<!-- ????? count -->
	<select id="getProductListCount" parameterType="AsSearchFilter" resultType="int"> 
		SELECT
        	count(*) cnt
        FROM ABA_PD_PRODUCT
		<if test="count > 0">
			WHERE
			<foreach collection="filters" separator=" AND " item="filter" index="index">
				${filter.name} like '%${filter.value}%' 
			</foreach>
		</if>
	</select>
	<!-- ????? -->
	<select id="getProductList" parameterType="AsSearchFilter" resultType="AsPrmProduct"> 
		SELECT
			<include refid="productListColumn"/>
        FROM  ABA_PD_PRODUCT
		<if test="count > 0">
			WHERE
			<foreach collection="filters" separator=" AND " item="filter" index="index">
				${filter.name} like '%${filter.value}%' 
			</foreach>
		</if>
		ORDER BY <choose><when test="sortKey != null and sortKey != ''">${sortKey} ${sortBy}</when><otherwise>PROD_CD DESC</otherwise></choose>
	</select>
	<select id="getAllProductList" parameterType="AsPrmProduct" resultType="AsPrmProduct"> 
		SELECT
			<include refid="productListColumn"/>
        FROM  ABA_PD_PRODUCT
        <if test="prodCd != null and prodCd != ''">
        WHERE prod_cd = #{prodCd}
        </if>
	</select>
	<select id="getDiscountProduct" parameterType="AsPrmProduct" resultType="AsPrmProduct">
		SELECT 
			  prod_cd prodCd
			, dscnt_prod_name prodName
		FROM aba_pd_dscnt_prod_info
		WHERE prod_cd = #{prodCd}
	</select>		  
	
	<select id="getProductGridList" parameterType="AsSearchFilter" resultType="AsPrmProduct">
		
		SELECT
				<include refid="productListColumn"/>
		
        FROM 	ABA_PD_PRODUCT 
        <if test="count > 0">
		WHERE
			<foreach collection="filters" separator=" AND " item="filter" index="index">
				${filter.name} like '%${filter.value}%' 
			</foreach>
		</if>
        ORDER BY <choose><when test="sortKey != null and sortKey != ''">${sortKey} ${sortBy}</when><otherwise>PROD_CD DESC</otherwise></choose>
				       
	</select>
	<!-- ???? -->
	<select id="getProductDetail" parameterType="AsPrmProduct" resultType="AsPrmProduct">
		SELECT
				<include refid="productListColumn"/>
          FROM  ABA_PD_PRODUCT
		 WHERE  PROD_CD like #{prodCd}
	</select>	
	<!-- ???? -->
	<delete id="deleteProduct" parameterType="AsPrmProduct">
		DELETE 	FROM ABA_PD_PRODUCT 
		 WHERE  PROD_CD = #{prodCd}
	</delete>	
	<!-- ??????-->
	<select id="checkProdCd" parameterType="AsPrmProduct"  resultType="int"> 
		SELECT count(*) cnt
		  FROM ABA_PD_PRODUCT
		 WHERE PROD_CD = #{prodCd}
	</select>
	<!-- ???? -->
	<insert id="insertProduct" parameterType="AsPrmProduct" >
		INSERT INTO ABA_PD_PRODUCT(
			PROD_CD                      
			,MRKT_CD                     
			,SVC_DOMAIN        
			,PROD_DV_CD        
			,PROD_KD_CD             
			,PROD_KD_DTL_CD              
			,CUST_DV_CD                  
			,VERSION                     
			,SALE_STRT_DTTM              
			,SALE_END_DTTM               
			,PROD_ID_CD                  
			,PROD_NAME                   
			,CURRENCY_CD                 
			,VALD_STRT_DT                
			,VALD_END_DT                 
			,PROD_PRTY                   
			,PROD_STATE_CD               
			,DSCR                        
		)
		VALUES(
			  #{prodCd         	     , jdbcType=VARCHAR}                               
			, #{mrktCd               , jdbcType=VARCHAR}  
			, #{svcDomain            , jdbcType=VARCHAR}  
			, #{prodDvCd             , jdbcType=VARCHAR}  
			, #{prodKdCd             , jdbcType=VARCHAR}
			, #{prodKdDtlCd          , jdbcType=VARCHAR}  
			, #{custDvCd             , jdbcType=VARCHAR}  
			, #{version              , jdbcType=VARCHAR}  
			, #{saleStrtDttm         , jdbcType=VARCHAR}  
			, #{saleEndDttm          , jdbcType=VARCHAR}  
			, #{prodIdCd             , jdbcType=VARCHAR}  
			, #{prodName             , jdbcType=VARCHAR}  
			, #{currencyCd           , jdbcType=VARCHAR}  
			, #{valdStrtDt           , jdbcType=VARCHAR}   
			, #{valdEndDt            , jdbcType=VARCHAR}   
			, #{prodPrty             }  
			, #{prodStateCd          , jdbcType=VARCHAR}  
			, #{dscr                 , jdbcType=VARCHAR}  
		)
	</insert>
	
	<!-- ???? -->
	<update id="updateProduct" parameterType="AsPrmProduct" >
		UPDATE ABA_PD_PRODUCT SET 
		  MRKT_CD         = #{mrktCd               , jdbcType=VARCHAR}  
		, SVC_DOMAIN      = #{svcDomain            , jdbcType=VARCHAR}  
		, PROD_DV_CD      = #{prodDvCd             , jdbcType=VARCHAR}  
		, PROD_KD_CD      = #{prodKdCd             , jdbcType=VARCHAR}  
		, PROD_KD_DTL_CD  = #{prodKdDtlCd          , jdbcType=VARCHAR}  
		, CUST_DV_CD      = #{custDvCd             , jdbcType=VARCHAR}  
		, VERSION         = #{version              , jdbcType=VARCHAR}  
		, SALE_STRT_DTTM  = #{saleStrtDttm         , jdbcType=VARCHAR}     
		, SALE_END_DTTM   = #{saleEndDttm          , jdbcType=VARCHAR}     
		, PROD_ID_CD      = #{prodIdCd             , jdbcType=VARCHAR}  
		, PROD_NAME       = #{prodName             , jdbcType=VARCHAR}  
		, CURRENCY_CD     = #{currencyCd           , jdbcType=VARCHAR}  
		, VALD_STRT_DT    = #{valdStrtDt           , jdbcType=VARCHAR}     
		, VALD_END_DT     = #{valdEndDt            , jdbcType=VARCHAR}     
		, PROD_PRTY       = #{prodPrty             }  
		, PROD_STATE_CD   = #{prodStateCd          , jdbcType=VARCHAR}  
		, DSCR            = #{dscr                 , jdbcType=VARCHAR}  
		WHERE PROD_CD = #{prodCd}
	</update>
	
	<!-- ???? -->
	<sql id="codeColumn">
		 ccode         	  AS code       
		, meaning             AS meaning          
	</sql>
	<!-- ?? ??? -->
	<select id="getCodeList" parameterType="AsLookupCode" resultType="AsLookupCode">
		SELECT <include refid="codeColumn"/>
		  FROM ABA_CO_FND_LOOKUP_VALUES
		 WHERE ccode_group=#{codeGroup}
		   AND LANGUAGE = #{language}
	</select>
	
	<!-- ???? -->
	<sql id="productRateListColumn">
		INVENTORY_ITEM_ID         AS inventoryItemId
		,VALD_STRT_DT             AS valdStrtDt
		,PROD_CD                  AS prodCd
		,FTR_CD                   AS ftrCd
		,RATE_DV_CD               AS rateDvCd
		,IOCLL_DV_CD              AS iocllDvCd
		,CALLING_ZONE_CD          AS callingZoneCd
		,CALLED_ZONE_CD           AS calledZoneCd
		,RATE_APLY_LVL_CD         AS rateAplyLvlCd
		,RATE_APLY_DV_CD          AS rateAplyDvCd
		,UAGE_APPLY_DV_CD         AS uageApplyDvCd
		,RATE_APLY_TIMEBAND_CD    AS rateAplyTimebandCd
		,RATE_APLY_INTERVAL_CD    AS rateAplyIntervalCd
		,RATE_APLY_CYCL_DV_CD     AS rateAplyCyclDvCd
		,RATE_APLY_KD_CD          AS rateAplyKdCd
		,RATE_APLY_UNIT_CD        AS rateAplyUnitCd
		,RATE_APLY_UNIT           AS rateAplyUnit
		,RATE                     AS rate
		,SPND_RATE                AS spndRate
		,INIT_RATE_CYCLE_DURATION AS initRateCycleDuration
		,INIT_RATE_APLY_UNIT_CD   AS initRateAplyUnitCd
		,INIT_RATE_APLY_UNIT      AS initRateAplyUnit
		,INIT_RATE                AS initRate
		,VALD_END_DT              AS valdEndDt
	</sql>
	
	<!-- ???? ??? count -->
	<select id="getProductRateListCount" parameterType="AsSearchFilter" resultType="int"> 
		SELECT
        	count(*) cnt
        FROM 
        	 ABA_PD_RATE A,
       		 ABA_PD_FTR  B
		<if test="count > 0">
			WHERE
			<foreach collection="filters" separator=" AND " item="filter" index="index">
				${filter.name} = '${filter.value}' 
			</foreach>
			AND B.FTR_CD  = A.FTR_CD
		</if>
	</select>
	<!-- ???? ???  -->
	<select id="getProductRateGridList" parameterType="AsSearchFilter" resultType="AsPrmProductRate">
		SELECT
			A.INVENTORY_ITEM_ID          AS inventoryItemId ,
	        A.VALD_STRT_DT               AS valdStrtDt ,
	        A.PROD_CD                    AS prodCd ,
	        A.FTR_CD                     AS ftrCd ,                  
	        B.FTR_NAME                   AS ftrCdNm,                   
	        A.RATE_DV_CD                 AS rateDvCd ,
	        A.IOCLL_DV_CD                AS iocllDvCd ,
	        A.CALLING_ZONE_CD            AS callingZoneCd ,
	        A.CALLED_ZONE_CD             AS calledZoneCd ,
	        A.RATE_APLY_LVL_CD           AS rateAplyLvlCd,
	        A.RATE_APLY_DV_CD            AS rateAplyDvCd,
	        A.UAGE_APPLY_DV_CD           AS uageApplyDvCd,
	        A.RATE_APLY_TIMEBAND_CD      AS rateAplyTimebandCd ,
	        A.RATE_APLY_INTERVAL_CD      AS rateAplyIntervalCd ,
	        A.RATE_APLY_CYCL_DV_CD       AS rateAplyCyclDvCd ,
	        A.RATE_APLY_KD_CD            AS rateAplyKdCd,
	        A.RATE_APLY_UNIT_CD          AS rateAplyUnitCd,
	        A.RATE_APLY_UNIT             AS rateAplyUnit,
	        A.RATE                       AS rate ,
	        A.SPND_RATE                  AS spndRate ,
	        A.INIT_RATE_CYCLE_DURATION   AS initRateCycleDuration ,
	        A.INIT_RATE_APLY_UNIT_CD     AS initRateAplyUnitCd ,
	        A.INIT_RATE_APLY_UNIT        AS initRateAplyUnit ,
	        A.INIT_RATE                  AS initRate ,
	        A.VALD_END_DT                AS valdEndDt
		FROM 
			ABA_PD_RATE A,
       		ABA_PD_FTR  B
         <if test="count > 0">
			WHERE
			<foreach collection="filters" separator=" AND " item="filter" index="index">
				${filter.name} = '${filter.value}' 
			</foreach>
			AND B.FTR_CD  = A.FTR_CD
	    </if>
        ORDER BY <choose><when test="sortKey != null and sortKey != ''">${sortKey} ${sortBy}</when><otherwise>VALD_STRT_DT DESC</otherwise></choose>
	</select>
	
	
	<select id ="getProductCycleRateListCount" parameterType="AsSearchFilter" resultType="int"> 
		SELECT
        	count(*) cnt
        FROM ABA_PD_CUSTOM_RC
	<if test="count > 0">
			WHERE
			<foreach collection="filters" separator=" AND " item="filter" index="index">
				${filter.name} = '${filter.value}' 
			</foreach>
	    </if>
	</select>
	<select id="getProductCycleRateGridList"   parameterType="AsSearchFilter" resultType="AsPrmProductRate">
	select 
	  ON_CYCLE AS onCycle,
	  RATE AS rate,
	  COND AS  cond
	from ABA_PD_CUSTOM_RC
	 <if test="count > 0">
			WHERE
			<foreach collection="filters" separator=" AND " item="filter" index="index">
				${filter.name} = '${filter.value}' 
			</foreach>
	    </if>
	</select>
	
		<!-- ?????? -->
	<select id="getProductRateDetail" parameterType="AsPrmProduct" resultType="AsPrmProductRate">
		SELECT
				<include refid="productRateListColumn"/>
          FROM  ABA_PD_RATE
		 WHERE  INVENTORY_ITEM_ID = #{inventoryItemId}
	</select>	
	<!-- ?????? -->
	<delete id="deleteProductRate" parameterType="AsPrmProductRate">
		DELETE 	FROM ABA_PD_RATE 
		 WHERE  INVENTORY_ITEM_ID = #{inventoryItemId}
	</delete>	
	<!-- ???? -->
	<insert id="insertProductRate" parameterType="AsPrmProductRate" >
		INSERT INTO ABA_PD_RATE(
			 INVENTORY_ITEM_ID           
			,VALD_STRT_DT          
			,PROD_CD
			,FTR_CD
			,RATE_DV_CD     
			,IOCLL_DV_CD          
			,RATE_APLY_LVL_CD          
			,RATE_APLY_DV_CD          
			,RATE_DTL_DV_CD          
			,TM_SET_CD          
			,SECT_SET_CD          
			,RATE_APLY_CYCL_DV_CD          
			,RATE_APLY_KD_CD          
			,RATE_APLY_UNIT_CD          
			,RATE_APLY_UNIT          
			,RATE          
			,SPND_RATE          
			,CALLED_ZONE_CD    
			,CALLING_ZONE_CD
			,VALD_END_DT
		)
		VALUES(
			  SQ_RATE_NO.NEXTVAL                               
			, #{valdStrtDt           , jdbcType=VARCHAR}  
			, #{prodCd               , jdbcType=VARCHAR}  
			, #{ftrCd                , jdbcType=VARCHAR}  
			, #{rateDvCd             , jdbcType=VARCHAR}
			, #{iocllDvCd            , jdbcType=VARCHAR}  
			, #{rateAplyLvlCd        , jdbcType=VARCHAR}  
			, #{rateAplyDvCd         , jdbcType=VARCHAR}  
			, #{rateDtlDvCd          , jdbcType=VARCHAR}  
			, #{tmSetCd              , jdbcType=VARCHAR}  
			, #{sectSetCd            , jdbcType=VARCHAR}  
			, #{rateAplyCyclDvCd     , jdbcType=VARCHAR}  
			, #{rateAplyKdCd         , jdbcType=VARCHAR}  
			, #{rateAplyUnitCd       , jdbcType=VARCHAR}   
			, #{rateAplyUnit         }   
			, #{rate                 }  
			, #{spndRate             , jdbcType=VARCHAR}  
			, ''  					  	
		    , ''  					  
		    , #{valdEndDt      		 , jdbcType=VARCHAR}  
		)
	</insert>
	
	<!-- ???? -->
	<update id="updateProductRate" parameterType="AsPrmProductRate" >
		UPDATE ABA_PD_RATE SET           
		 VALD_STRT_DT             = #{valdStrtDt           , jdbcType=VARCHAR}           
		,PROD_CD                  = #{prodCd               , jdbcType=VARCHAR}        
		,FTR_CD                   = #{ftrCd                , jdbcType=VARCHAR}        
		,RATE_DV_CD               = #{rateDvCd             , jdbcType=VARCHAR}        
		,IOCLL_DV_CD              = #{iocllDvCd            , jdbcType=VARCHAR}        
		,RATE_APLY_LVL_CD         = #{rateAplyLvlCd        , jdbcType=VARCHAR}        
		,RATE_APLY_DV_CD          = #{rateAplyDvCd         , jdbcType=VARCHAR}        
		,RATE_DTL_DV_CD           = #{rateDtlDvCd          , jdbcType=VARCHAR}           
		,TM_SET_CD                = #{tmSetCd              , jdbcType=VARCHAR}           
		,SECT_SET_CD              = #{sectSetCd            , jdbcType=VARCHAR}        
		,RATE_APLY_CYCL_DV_CD     = #{rateAplyCyclDvCd     , jdbcType=VARCHAR}        
		,RATE_APLY_KD_CD          = #{rateAplyKdCd         , jdbcType=VARCHAR}        
		,RATE_APLY_UNIT_CD        = #{rateAplyUnitCd       , jdbcType=VARCHAR}           
		,RATE_APLY_UNIT           = #{rateAplyUnit         }                          
		,RATE                     = #{rate                 }                          
		,SPND_RATE                = #{spndRate             , jdbcType=VARCHAR}        
		,CALLED_ZONE_CD           =  ''                      
		,CALLING_ZONE_CD          =  ''                      
		,VALD_END_DT              = #{valdEndDt      	   , jdbcType=VARCHAR}     
		WHERE INVENTORY_ITEM_ID = #{inventoryItemId}
	</update>
	
	
	
	<!-- ??? ???? -->
	<sql id="productDpndListColumn">
		 PROD_CD                      AS  	prodCd
        ,PROD_CD || ' :: ' || (SELECT PROD_NAME FROM ABA_PD_PRODUCT  A WHERE PROD_CD = A.PROD_CD AND ROWNUM = 1) AS prodName
		,TRGT_PROD_CD                 AS 	trgtProdCd
        ,TRGT_PROD_CD || ' :: ' || (SELECT PROD_NAME FROM ABA_PD_PRODUCT  A WHERE TRGT_PROD_CD = A.PROD_CD AND ROWNUM = 1) AS trgtProdName
		,PROD_DPND_RELS_DV_CD         AS 	prodDpndSelsDvCd
		
        ,PROD_DPND_RELS_DV_CD || ' :: ' || FC_LOOKUP_NAME(PROD_DPND_RELS_DV_CD,'PrdRelsDvCd','en') AS   prodDpndSelsDvNm  
		,RELS_KD_CD                   AS 	relsKdCd
        ,VALD_STRT_DT                 AS 	valdStrtDt
		,VALD_END_DT                  AS  	valdEndDt
		,ADD_CHARGE					  AS    addChrge
	</sql>
	
	<!-- ??? ???? count-->
	<select id="getProductDpndListCount" parameterType="AsSearchFilter" resultType="int"> 
		SELECT
        	count(*) cnt
        FROM ABA_PD_PROD_DPND_RELS
		<if test="count > 0">
			WHERE
			<foreach collection="filters" separator=" AND " item="filter" index="index">
				${filter.name} = '${filter.value}' 
			</foreach>
		</if>
	</select>
	
	<!-- ??? ???? ???-->
	<select id="getProductDpndGridList" parameterType="AsSearchFilter" resultType="AsPrmProductDpnd">
<!-- 		SELECT -->
<!-- 				 PROD_CD                      AS  	prodCd -->
<!--         ,PROD_CD || ' :: ' || (SELECT PROD_NAME FROM ABA_PD_PRODUCT  A WHERE PROD_CD = A.PROD_CD AND ROWNUM = 1) AS prodName -->
<!-- 		,TRGT_PROD_CD                 AS 	trgtProdCd -->
<!--         ,TRGT_PROD_CD || ' :: ' || (SELECT PROD_NAME FROM ABA_PD_PRODUCT  A WHERE TRGT_PROD_CD = A.PROD_CD AND ROWNUM = 1) AS trgtProdName -->
<!-- 		,PROD_DPND_RELS_DV_CD         AS 	prodDpndSelsDvCd -->
		
<!--         ,PROD_DPND_RELS_DV_CD || ' :: ' || FC_LOOKUP_NAME(PROD_DPND_RELS_DV_CD,'PrdRelsDvCd','en') AS   prodDpndSelsDvNm   -->
<!-- 		,RELS_KD_CD                   AS 	relsKdCd -->
<!--         ,VALD_STRT_DT                 AS 	valdStrtDt -->
<!-- 		,VALD_END_DT                  AS  	valdEndDt -->
<!-- 		,ADD_CHARGE					  AS    addChrge -->
<!-- 		   FROM 	ABA_PD_PROD_DPND_RELS -->
		   
		SELECT
			A .PROD_CD 											AS prodCd,
			(
				SELECT
					PROD_NAME
				FROM
					ABA_PD_PRODUCT
				WHERE
					PROD_CD = A .PROD_CD
				AND ROWNUM = 1
			) 													AS prodName,
			A .TRGT_PROD_CD 									AS trgtProdCd,
			(
				SELECT
					PROD_NAME
				FROM
					ABA_PD_PRODUCT
				WHERE
					PROD_CD = A .TRGT_PROD_CD
				AND ROWNUM = 1) 								AS trgtProdName,
			A .PROD_DPND_RELS_DV_CD 							AS prodDpndSelsDvCd,
			FC_LOOKUP_NAME (B.PROD_KD_CD, 'CsPrdType', 'en') 		AS trgtProdType,
			FC_LOOKUP_NAME (A .PROD_DPND_RELS_DV_CD,'PrdRelsDvCd','en') AS prodDpndSelsDvNm,
			A .RELS_KD_CD 										AS relsKdCd,
			TO_CHAR(A.VALD_STRT_DT, 'YYYY-MM-DD HH24:MI:SS')	AS valdStrtDt,
			TO_CHAR(A.VALD_END_DT, 'YYYY-MM-DD HH24:MI:SS') 	AS valdEndDt,
			A.ADD_CHARGE 										AS addChrge
			
		FROM
			ABA_PD_PROD_DPND_RELS A,
			ABA_PD_PRODUCT B
				   <if test="count > 0">
				   WHERE 
				   B.PROD_CD = A.TRGT_PROD_CD
				   AND
					<foreach collection="filters" separator=" AND " item="filter" index="index">
						A.${filter.name} = '${filter.value}' <!-- check -->
					</foreach>
				  </if>
		     	ORDER BY <choose><when test="sortKey != null and sortKey != ''">${sortKey} ${sortBy}</when><otherwise>A.VALD_STRT_DT DESC</otherwise></choose>
	</select>
	
	<!-- ???????? -->
	<select id="getProductDpndDetail" parameterType="AsPrmProductDpnd" resultType="AsPrmProductDpnd">
		SELECT
				<include refid="productDpndListColumn"/>
          FROM  ABA_PD_PROD_DPND_RELS
		 WHERE  PROD_CD = #{prodCd} 
		 	 AND TRGT_PROD_CD = #{trgtProdCd}
	</select>	
	<!-- ???????? -->
	<delete id="deleteProductDpnd" parameterType="AsPrmProductDpnd">
		DELETE 	FROM ABA_PD_PROD_DPND_RELS 
		 WHERE  PROD_CD = #{prodCd} 
		 	 AND TRGT_PROD_CD = #{trgtProdCd}
	</delete>	
	<!-- ???????? -->
	<insert id="insertProductDpnd" parameterType="AsPrmProductDpnd" >
		INSERT INTO ABA_PD_PROD_DPND_RELS(
			 PROD_CD    
			,TRGT_PROD_CD
			,VALD_STRT_DT
			,PROD_DPND_RELS_DV_CD
			,RELS_KD_CD
			,VALD_END_DT
		)
		VALUES(
			  #{prodCd               , jdbcType=VARCHAR}  
			, #{trgtProdCd           , jdbcType=VARCHAR}  
			, #{valdStrtDt           , jdbcType=VARCHAR}  
			, #{prodDpndSelsDvCd     , jdbcType=VARCHAR}
			, #{relsKdCd             , jdbcType=VARCHAR}  
			, #{valdEndDt            , jdbcType=VARCHAR}  
		)
	</insert>
	
	<!-- ???????? -->
	<update id="updateProductDpnd" parameterType="AsPrmProductDpnd" >
		UPDATE ABA_PD_PROD_DPND_RELS SET           
		 PROD_DPND_RELS_DV_CD         = #{prodDpndSelsDvCd        , jdbcType=VARCHAR}           
		,RELS_KD_CD                   = #{relsKdCd                , jdbcType=VARCHAR}        
		,VALD_END_DT                  = #{valdEndDt               , jdbcType=VARCHAR}        
		 WHERE  PROD_CD = #{prodCd} 
		 	 AND TRGT_PROD_CD = #{trgtProdCd}
	</update>
	<select id="getProductDpndTrgtListCount" parameterType="AsSearchFilter" resultType="int"> 
 		SELECT count(*) cnt
          FROM ABA_PD_PRODUCT
         WHERE prod_cd NOT IN(#{filterMap.prodCd})
		<if test="count > 0">
			<foreach collection="filters" separator=" AND " item="filter" index="index">
				${filter.name} = '${filter.value}' 
			</foreach>
		</if>
		
	</select>	  
	<select id="getProductDpndTrgtGridList" parameterType="AsSearchFilter" resultType="AsPrmProduct">
	
		SELECT
			<include refid="productListColumn"/>
			,(SELECT b.TRGT_PROD_CD FROM  ABA_PD_PROD_DPND_RELS b WHERE b.PROD_CD = #{filterMap.prodCd} AND b.TRGT_PROD_CD  = a.PROD_CD)  AS isUse
		   FROM 	ABA_PD_PRODUCT a
		   WHERE prod_cd NOT IN(#{filterMap.prodCd})
		   <if test="count > 0">
			<foreach collection="filters" separator=" AND " item="filter" index="index">
				${filter.name} = '${filter.value}' 
			</foreach>
		  </if>
     	ORDER BY <choose><when test="sortKey != null and sortKey != ''">${sortKey} ${sortBy}</when><otherwise>VALD_STRT_DT DESC</otherwise></choose>

	</select>
	<select id="getProductDpndCheck" parameterType="AsPrmProductDpnd" resultType="int">
	
		SELECT count(*) cnt
		   FROM 	ABA_PD_PROD_DPND_RELS
		  WHERE PROD_CD = #{prodCd}
   			  AND TRGT_PROD_CD = #{trgtProdCd}

	</select>
	
	<!-- ??? ????? -->
	<sql id="productDepositListColumn">
		 A.DEPOSIT_SET_ID      AS depositSetId
        ,B.DEPOSIT_SET_NAME   AS depositSetName
        ,A.PROD_CD            AS ProdCd
        ,A.TREATMENT          AS treatment
        ,A.GRACE_PERIOD       AS gracePeriod
	</sql>
	
	<!-- ????? ??? count -->
	<select id="getProductDepositListCount" parameterType="AsSearchFilter" resultType="int"> 
		SELECT
        	count(*) cnt
        FROM ABA_PD_PROD_DEPOSIT A,
             ABA_PD_DEPOSIT B
       WHERE A.DEPOSIT_SET_ID = B.DEPOSIT_SET_ID
		<if test="count > 0">
			AND
			<foreach collection="filters" separator=" AND " item="filter" index="index">
				${filter.name} = '${filter.value}' 
			</foreach>
		</if>
	</select>
	
	<!-- ??????? ???  -->
	<select id="getProductDepositGridList" parameterType="AsSearchFilter" resultType="AsPrmProductDeposit">
	   SELECT 
	   		A.DEPOSIT_SET_ID 	AS depositSetId ,
       		B.DEPOSIT_SET_NAME 	AS depositSetName ,
       		A.PROD_CD 			AS prodCd ,
       		A.TREATMENT 		AS treatment ,
       		A.GRACE_PERIOD 		AS gracePeriod
		FROM   
			ABA_PD_PROD_DEPOSIT A,
       		ABA_PD_DEPOSIT B
		WHERE
			 	A.DEPOSIT_SET_ID = B.DEPOSIT_SET_ID
		<if test="count > 0">
			AND
			<foreach collection="filters" separator=" AND " item="filter" index="index">
				A.${filter.name} = '${filter.value}' 
			</foreach>
		  </if>
		  	ORDER BY <choose><when test="sortKey != null and sortKey != ''">${sortKey} ${sortBy}</when><otherwise>A.DEPOSIT_SET_ID DESC</otherwise></choose>
	</select>
	
	<!-- ??????? -->
	<select id="getProductDepositDetail" parameterType="AsPrmProductDeposit" resultType="AsPrmProductDeposit">
		SELECT
				<include refid="productDepositListColumn"/>
          FROM  ABA_PD_DEPOSIT_BY_PROD
 		 WHERE  PROD_CD			= #{prodCd} 
	 	   AND  DEPOSIT 		= #{deposit}
	 	   AND  HIGH_THRESHOLD 	= #{highThreshold}
	 	   AND  VALD_STRT_DT	= to_date(#{valdStrtDt},'yyyy-mm-dd') 
	</select>	
	<!-- ??????? -->
	<delete id="deleteProductDeposit" parameterType="AsPrmProductDeposit">
		DELETE 	FROM ABA_PD_DEPOSIT_BY_PROD 
 		 WHERE  PROD_CD			= #{prodCd} 
	 	   AND  DEPOSIT 		= #{deposit}
	 	   AND  HIGH_THRESHOLD 	= #{highThreshold}
	 	   AND  VALD_STRT_DT	= to_date(#{valdStrtDt},'yyyy-mm-dd') 
	</delete>	
	<!-- ??????? -->
	<insert id="insertProductDeposit" parameterType="AsPrmProductDeposit" >
		INSERT INTO ABA_PD_DEPOSIT_BY_PROD(
			 PROD_CD
			,DEPOSIT
			,HIGH_THRESHOLD
			,VALD_STRT_DT
			,LOW_THRESHOLD
			,MID_THRESHOLD
			,TREATMENT
			,VALD_END_DT
		)
		VALUES(
			  #{prodCd            , jdbcType=VARCHAR}  
			, #{deposit           }  
			, #{highThreshold     }  
			, #{valdStrtDt        , jdbcType=VARCHAR}
			, #{lowThreshold      }  
			, #{midThreshold      }  
			, #{treatment     	  } 
			, #{valdEndDt         , jdbcType=VARCHAR}  
		)
	</insert>
	
	<!-- ??????? -->
	<update id="updateProductDeposit" parameterType="AsPrmProductDeposit" >
		UPDATE ABA_PD_DEPOSIT_BY_PROD SET           
		 LOW_THRESHOLD         = #{lowThreshold      }                               
		,MID_THRESHOLD         = #{midThreshold      }                            
		,TREATMENT             = #{treatment     	 }                       
		,VALD_END_DT           = #{valdEndDt         , jdbcType=VARCHAR}       
 		 WHERE  PROD_CD			= #{prodCd} 
	 	   AND  DEPOSIT 		= #{deposit}
	 	   AND  HIGH_THRESHOLD 	= #{highThreshold}
	 	   AND  VALD_STRT_DT	= to_date(#{valdStrtDt},'yyyy-mm-dd') 
	</update>
	
	
	<!-- ??? ??? ?? -->
	<sql id="productThresholdListColumn">
		 	A.PROD_CD AS prodCd
	       ,A.THRESHOLD_ID AS thresholdId
	       ,B.THRESHOLD_NAME AS thresHoldName
	       ,C.LIMIT_THRESHOLD_ID AS limitThresHoldId
	       ,C.LIMIT_THRESHOLD  AS limitThresHold
	       ,C.THRESHOLD_ACTION AS ThresholdAction
	       ,C.THRESHOLD_ACTION_NAME AS ThresholdActionName
	</sql>
	
	
<!-- 	<select id="getProductThresholdListCount" parameterType="AsSearchFilter" resultType="int"> 
		SELECT 
			count(*) cnt
		
		 FROM ABA_PD_PROD_DEPOSIT       A,
		       ABA_PD_DEPOSIT           B,
		       ABA_PD_DEPOSIT_DETAIL    C,
		       ABA_PD_THRESHOLD_MASTER  D,
		       ABA_PD_THRESHOLD         E,
		       ABA_PD_AMOUNT_BY_DEPOSIT F
		WHERE  B.DEPOSIT_SET_ID  = A.DEPOSIT_SET_ID
		
		AND    C.DEPOSIT_SET_ID  = A.DEPOSIT_SET_ID
		AND    D.THRESHOLD_ID    = C.THRESHOLD_SCHEME
		AND    E.THRESHOLD_ID    = D.THRESHOLD_ID
		AND    F.DEPOSIT_SET_ID  = A.DEPOSIT_SET_ID
		AND    F.DEPOSIT_ID      = C.DEPOSIT_ID

		<if test="count > 0">
			AND
			<foreach collection="filters" separator=" AND " item="filter" index="index">
				A.${filter.name} = '${filter.value}' 
			</foreach>
		</if>
	</select> -->
	
	<!-- ??????? ???  -->
	<select id="getProductThresholdGridList" parameterType="AsSearchFilter" resultType="AsPrmProductThreshold">
		SELECT A.PROD_CD
	      	  ,C.DEPOSIT_ID                          
		      ,B.DEPOSIT_SET_NAME 	  as 	depositSetName
		      ,D.THRESHOLD_ID		  as 	thresholdId	
		      ,D.THRESHOLD_NAME 	  as 	thresHoldName
		      ,E.LIMIT_THRESHOLD_ID   as 	limitThresHoldId
		      ,E.LIMIT_THRESHOLD||'%'	  as 	limitThresHold
		      ,E.THRESHOLD_ACTION	  as 	thresholdAction
		      ,E.THRESHOLD_ACTION_NAME    as 	thresholdActionName
		      ,F.DEPOSIT				  as 	deposit	
		      ,F.THRESHOLD				  as   	thresholdMin 
		      ,F.THRESHOLD_MAX			  as 	thresholdMax
		      ,F.THRESHOLD_UNIT			  as	thresholdUnit
		  FROM ABA_PD_PROD_DEPOSIT      A,
		       ABA_PD_DEPOSIT           B,
		       ABA_PD_DEPOSIT_DETAIL    C,
		       ABA_PD_THRESHOLD_MASTER  D,
		       ABA_PD_THRESHOLD         E,
		       ABA_PD_AMOUNT_BY_DEPOSIT F
		WHERE  B.DEPOSIT_SET_ID  = A.DEPOSIT_SET_ID
		
		AND    C.DEPOSIT_SET_ID  = A.DEPOSIT_SET_ID
		AND    D.THRESHOLD_ID    = C.THRESHOLD_SCHEME
		AND    E.THRESHOLD_ID    = D.THRESHOLD_ID
		AND    F.DEPOSIT_SET_ID  = A.DEPOSIT_SET_ID
		AND    F.DEPOSIT_ID      = C.DEPOSIT_ID

		AND
		<foreach collection="filters" separator=" AND " item="filter" index="index">
			A.${filter.name} = '${filter.value}' 
		</foreach>
	   	ORDER BY C.DEPOSIT_ID, D.THRESHOLD_ID, E.LIMIT_THRESHOLD ASC 
	</select>
	
	<select id="getProductThresholdAndDeposit" parameterType="AsSearchFilter" resultType="AsPrmProductThresholdAndDeposit">
		SELECT 
			 A.PROD_CD			AS prodCd		
			,B.DEPOSIT_SET_NAME AS depositSetName
			,C.DEPOSIT_NAME		AS depositName
			,D.THRESHOLD_NAME   AS thresholdName
			,F.DEPOSIT			AS deposit
			,F.THRESHOLD 		AS thresholdMim
			,F.THRESHOLD_MAX 	AS thresholdMax
			,F.THRESHOLD_UNIT	AS thresholdUnit
		FROM 
			ABA_PD_PROD_DEPOSIT A,
			ABA_PD_DEPOSIT B,
			ABA_PD_DEPOSIT_DETAIL C,
			ABA_PD_THRESHOLD_MASTER D,
			ABA_PD_THRESHOLD E,
			ABA_PD_AMOUNT_BY_DEPOSIT F
		WHERE 
			    B.DEPOSIT_SET_ID 	= A.DEPOSIT_SET_ID
			AND
			<foreach collection="filters" separator=" AND " item="filter" index="index">
				A.${filter.name} = '${filter.value}' 
			</foreach>
			AND C.DEPOSIT_SET_ID 	= A.DEPOSIT_SET_ID
			AND D.THRESHOLD_ID 	 	= C.THRESHOLD_SCHEME
			AND E.THRESHOLD_ID 		= D.THRESHOLD_ID
			AND E.LIMIT_THRESHOLD 	= 100
			AND F.DEPOSIT_SET_ID 	= A.DEPOSIT_SET_ID
			AND F.DEPOSIT_ID 		= C.DEPOSIT_ID
			ORDER BY C.DEPOSIT_ID, D.THRESHOLD_ID, E.LIMIT_THRESHOLD ASC
	</select>
	
	
	
	
	
	
	
	
	
	
	<!-- ??????? -->
	<select id="getProductThresholdDetail" parameterType="AsPrmProductThreshold" resultType="AsPrmProductThreshold">
		SELECT
				<include refid="productThresholdListColumn"/>
          FROM  ABA_PD_THRESHOLD_BY_PROD
 		 WHERE  PROD_CD			= #{prodCd} 
	 	   AND  VALD_STRT_DT	= to_date(#{valdStrtDt},'yyyy-mm-dd') 
	</select>	
	<!-- ??????? -->
	<delete id="deleteProductThreshold" parameterType="AsPrmProductThreshold">
		DELETE 	FROM ABA_PD_THRESHOLD_BY_PROD 
 		 WHERE  PROD_CD			= #{prodCd} 
	 	   AND  VALD_STRT_DT	= to_date(#{valdStrtDt},'yyyy-mm-dd') 
	</delete>	
	<!-- ??????? -->
	<insert id="insertProductThreshold" parameterType="AsPrmProductThreshold" >
		INSERT INTO ABA_PD_THRESHOLD_BY_PROD(
			 PROD_CD
			,VALD_STRT_DT
			,THRESHOLD_01
			,THRESHOLD_03
			,THRESHOLD_02
			,VALD_END_DT
		)
		VALUES(
			  #{prodCd          , jdbcType=VARCHAR}  
			, #{valdStrtDt      , jdbcType=VARCHAR}  
			, #{threshold_01    }  
			, #{threshold_03    }
			, #{threshold_02    }  
			, #{valdEndDt       , jdbcType=VARCHAR}  
		)
	</insert>
	
	<!-- ??????? -->
	<update id="updateProductThreshold" parameterType="AsPrmProductThreshold" >
		UPDATE ABA_PD_THRESHOLD_BY_PROD SET           
		 THRESHOLD_01         =  #{threshold_01    }                             
		,THRESHOLD_03         =  #{threshold_03    }                          
		,THRESHOLD_02         =  #{threshold_02    }                     
		,VALD_END_DT          =  #{valdEndDt       , jdbcType=VARCHAR}     
 		 WHERE  PROD_CD			=  #{prodCd} 
	 	   AND  VALD_STRT_DT	= to_date(#{valdStrtDt},'yyyy-mm-dd') 
	</update>
	
	
	<!-- ?? ?????? ?? -->
	<sql id="productVoucherListColumn">
		 PROD_CD         	AS  prodCd
		,VOUCHER_ID         AS 	voucherId
		
		,VALD_STRT_DT       AS 	valdStrtDt
		,VALD_END_DT        AS  valdEndDt
	</sql>
	
	
	<!-- ?? ??????  ??? count -->
	<select id="getProductVoucherListCount" parameterType="AsSearchFilter" resultType="int"> 
		SELECT
        	count(*) cnt
        FROM ABA_PD_VOUCHER_BY_PROD
		<if test="count > 0">
			WHERE
			<foreach collection="filters" separator=" AND " item="filter" index="index">
				${filter.name} = '${filter.value}' 
			</foreach>
		</if>
	</select>
	
	<!-- ?? ??????  ???  -->
	<select id="getProductVoucherGridList" parameterType="AsSearchFilter" resultType="AsPrmProductVoucher">
	  SELECT b.prod_cd         		prodCd
              , b.voucher_id 			voucherId
              , c.vchr_name        	prodName
              , c.amount        	 	deposit
              , FC_LOOKUP_NAME(c.vchr_type,'VoucherType','en') vchrType
              , c.VALD_STRT_DT 
              , c.VALD_END_DT 
       FROM aba_pd_voucher_by_prod b ,
            aba_pd_voucher_info    c
       WHERE b.voucher_id = c.voucher_id
       AND c.vchr_type = '1'
       AND SYSDATE BETWEEN b.vald_strt_dt AND b.vald_end_dt
       <if test="count > 0">
         AND 
        <foreach collection="filters" separator=" AND " item="filter" index="index">
		b.${filter.name} = '${filter.value}' 
	   </foreach>
 </if>
	</select>
	
	<!-- ??????? -->
	<select id="getProductVoucherDetail" parameterType="AsPrmProductVoucher" resultType="AsPrmProductVoucher">
		SELECT
				<include refid="productVoucherListColumn"/>
          FROM  ABA_PD_VOUCHER_BY_PROD
 		 WHERE  PROD_CD			= #{prodCd} 
 		   AND  VOUCHER_ID		= #{voucherId} 
	 	   AND  VALD_STRT_DT	= to_date(#{valdStrtDt},'yyyy-mm-dd') 
	</select>	
	<!-- ??????? -->
	<delete id="deleteProductVoucher" parameterType="AsPrmProductVoucher">
		DELETE 	FROM ABA_PD_VOUCHER_BY_PROD 
 		 WHERE  PROD_CD			= #{prodCd} 
 		   AND  VOUCHER_ID		= #{voucherId} 
	 	   AND  VALD_STRT_DT	= to_date(#{valdStrtDt},'yyyy-mm-dd') 
	</delete>	
	<!-- ??????? -->
	<insert id="insertProductVoucher" parameterType="AsPrmProductVoucher" >
		INSERT INTO ABA_PD_VOUCHER_BY_PROD(
			 PROD_CD
			,VOUCHER_ID
			,VALD_STRT_DT
			,VALD_END_DT
		)
		VALUES(
			  #{prodCd        , jdbcType=VARCHAR}  
			, #{voucherId     , jdbcType=VARCHAR}  
			, #{valdStrtDt    , jdbcType=VARCHAR}   
			, #{valdEndDt     , jdbcType=VARCHAR}  
		)
	</insert>
	
	<!-- ??????? -->
	<update id="updateProductVoucher" parameterType="AsPrmProductVoucher" >
		UPDATE ABA_PD_VOUCHER_BY_PROD SET           
		 VALD_END_DT          =  #{valdEndDt       , jdbcType=VARCHAR}     
 		 WHERE  PROD_CD		  = #{prodCd} 
 		   AND  VOUCHER_ID	  = #{voucherId} 
	 	   AND  VALD_STRT_DT  = to_date(#{valdStrtDt},'yyyy-mm-dd') 
	</update>
	
	
	<!-- ?????  ?? -->
	<sql id="productDevByProdListColumn">
		 PROD_CD         	AS  prodCd
		,DEV_ID         	AS 	devId
		,VALD_STRT_DT       AS 	valdStrtDt
		,VALD_END_DT        AS  valdEndDt
	</sql>
	
	
	<!-- ????? ??? count -->
	<select id="getProductDevByProdListCount" parameterType="AsSearchFilter" resultType="int"> 
		SELECT
        	count(*) cnt
        FROM ABA_PD_DEV_BY_PROD
		<if test="count > 0">
			WHERE
			<foreach collection="filters" separator=" AND " item="filter" index="index">
				${filter.name} = '${filter.value}' 
			</foreach>
		</if>
	</select>
	
	<!-- ????? ???  -->
	<select id="getProductDevByProdGridList" parameterType="AsSearchFilter" resultType="AsPrmProductDevByProd">
	<!-- 	SELECT
			<include refid="productDevByProdListColumn"/>
			FROM 	ABA_PD_DEV_BY_PROD
			<if test="count > 0">
			WHERE
			<foreach collection="filters" separator=" AND " item="filter" index="index">
				${filter.name} = '${filter.value}' 
			</foreach>
			</if>
				ORDER BY <choose><when test="sortKey != null and sortKey != ''">${sortKey} ${sortBy}</when><otherwise>VALD_STRT_DT DESC</otherwise></choose> -->
		SELECT 
			PROD_CD              		AS prodCd          --  /* Product Code */
    	   	,DEV_ID              		AS devId             --/* Model Code   */
      		,DEVC_MDL_NM          AS devcMdlNm         --/* Model Name   */
--      	,VALD_STRT_DT 			AS valdStrtDt             -- /* 시작일 종료일 은 삭제처리 */
--      	,VALD_END_DT 			AS valdEndDt
  		FROM ABA_PD_DEV_BY_PROD A,
       			 ABA_RE_MDL_CD      B
       	<if test="count > 0">
		WHERE
			<foreach collection="filters" separator=" AND " item="filter" index="index">
				${filter.name} = '${filter.value}' 
			</foreach>
			</if>
				and  B.DEVC_MDL_CD(+)  = A.DEV_ID
       			 
		<!-- WHERE A.PROD_CD      = #{prodCd}
  			and  B.DEVC_MDL_CD(+)  = A.DEV_ID -->
	</select>
<!-- 	05.05추가 -->
	<select id="getRequiredList" parameterType="AsSearchFilter" resultType="AsPrmProductDevByProd">
		SELECT 
			   PROD_CD              AS prodCd            <!-- Product Code  -->
      		 , DEV_GRP_CD           AS devcClssCd        <!-- Class Code    -->
      		 , DEV_GRP_NAME         AS devcClssNm        <!-- Class Name    -->
      		 , AMOUNT               AS cnt               <!-- Need Device   -->
      		 , DEPOSIT              AS deposit           <!-- Deposit       -->
<!--       		 , DEV_DEPOSIT_FTR -->
  		FROM ABA_PD_DEV_DEPOSIT_BY_PROD
 		WHERE 
 			<foreach collection="filters" separator=" AND " item="filter" index="index">
				${filter.name} = '${filter.value}' 
			</foreach>
	</select>
	
	<!-- ???????? -->
	<select id="getProductDevByProdDetail" parameterType="AsPrmProductDevByProd" resultType="AsPrmProductDevByProd">
		SELECT
				<include refid="productDevByProdListColumn"/>
          FROM  ABA_PD_DEV_BY_PROD
 		 WHERE  PROD_CD		  = #{prodCd} 
 		   AND  DEV_ID   	  = #{devId} 
	 	   AND  VALD_STRT_DT  = to_date(#{valdStrtDt},'yyyy-mm-dd') 
	</select>	
	<!-- ???????? -->
	<delete id="deleteProductDevByProd" parameterType="AsPrmProductDevByProd">
		DELETE 	FROM ABA_PD_DEV_BY_PROD 
 		 WHERE  PROD_CD		  = #{prodCd} 
 		   AND  DEV_ID   	  = #{devId} 
	 	   AND  VALD_STRT_DT  = to_date(#{valdStrtDt},'yyyy-mm-dd') 
	</delete>	
	<!-- ???????? -->
	<insert id="insertProductDevByProd" parameterType="AsPrmProductDevByProd" >
		INSERT INTO ABA_PD_DEV_BY_PROD(
			 PROD_CD
			,DEV_ID
			,VALD_STRT_DT
			,VALD_END_DT
		)
		VALUES(
			  #{prodCd        , jdbcType=VARCHAR}  
			, #{devId     , jdbcType=VARCHAR}  
			, #{valdStrtDt    , jdbcType=VARCHAR}   
			, #{valdEndDt     , jdbcType=VARCHAR}  
		)
	</insert>
	
	<!-- ???????? -->
	<update id="updateProductDevByProd" parameterType="AsPrmProductDevByProd" >
		UPDATE ABA_PD_DEV_BY_PROD SET           
		 VALD_END_DT          =  #{valdEndDt       , jdbcType=VARCHAR}     
 		 WHERE  PROD_CD		  = #{prodCd} 
 		   AND  DEV_ID   	  = #{devId} 
	 	   AND  VALD_STRT_DT  = to_date(#{valdStrtDt},'yyyy-mm-dd') 
	</update>
	
	
	
	
	
	
	
	
<!-- 	05.05수정 -->
	<select id="getProductNumberByProdGridList" parameterType="AsSearchFilter" resultType="AsPrmProductNumberByProd">
	    SELECT
	    	 PROD_CD              AS prodCd            <!-- /* Product Code  */ -->
      	   , PREFIX_ALLOWED       AS prefixNo          <!-- /* Prefix No     */ -->
      	   , RANGE_START          AS lastStartNo       <!-- /* Last Start No */ -->
      	   , RANGE_END            AS lastEndNo         <!-- /* Last End No   */ -->
		FROM ABA_PD_NUM_PREFIX_BY_PROD
 		WHERE
 		<foreach collection="filters" separator=" AND " item="filter" index="index">
				${filter.name} = '${filter.value}' 
		</foreach> 
	</select>
	
	<!-- 05.05 추가 -->
	<select id="getProductNumberByProdGridList_1" parameterType="AsSearchFilter" resultType="AsPrmProductNumberByProd">
 		SELECT 
 			  A.PROD_CD              AS prodCd           	<!--  /* Product Code  */ -->
      		, A.GRADE                AS grade             	<!-- /* Grade Code    */ --> 
      		, fc_lookup_name(A.GRADE, 'NumberGrade', 'en')  AS gradeDesc         <!-- /* Grade         */ -->
      		, A.NUMBER_FEE_FTR       AS ftrCd             	<!-- /* Feature Code  */ -->
      		, B.FTR_NAME             AS ftrNm             	<!-- /* Feature Name  */ -->
      		, A.NUMBER_FEE_AMT       AS numberFee         	<!-- /* Number Fee    */ -->
  		FROM ABA_PD_NUMBER_FEE_BY_PROD A,
       		 ABA_PD_FTR                B
 		WHERE 
 		<foreach collection="filters" separator=" AND " item="filter" index="index">
				 A.${filter.name} = '${filter.value}' 
		</foreach> 
   		  AND B.FTR_CD  = A.NUMBER_FEE_FTR
	</select>
	
	<!-- 05.05 추가 -->
	<select id="getProductNumberByProdGridList_2" parameterType="AsSearchFilter" resultType="AsPrmProductNumberByProd">
 		SELECT 
 			A.PROD_CD            AS prodCd            <!-- /* Product Code  */ -->
      	  , A.SAVING_PERIOD      AS savingPeriod      <!-- /* Saving Period */ -->
          , A.PERIOD_TYPE        AS periodType        <!-- /* Period Type   */ -->
          , A.NUMBER_SAVING_FTR  AS ftrCd             <!-- /* Feature Code  */ -->
          , B.FTR_NAME           AS ftrNm             <!-- /* Feature Name  */ -->
          , A.DEPOSIT            AS numberSavingFee   <!-- /* Saving Fee    */ -->
  		FROM 
  			 ABA_PD_NUMBER_SAVING_BY_PROD A,
       		 ABA_PD_FTR                   B
 		WHERE 
 			<foreach collection="filters" separator=" AND " item="filter" index="index">
			 	A.${filter.name} = '${filter.value}' 
			</foreach> 
   		 	AND B.FTR_CD    = A.NUMBER_SAVING_FTR
	</select>
	
	
	
	<sql id="productNumberByProdListColumn">
		 PROD_CD                AS  prodCd
		,PREFIX_ALLOWED         AS 	prefixAllowed
		,VALD_STRT_DT           AS 	valdStrtDt
		,RELS_KD_CD             AS  relsKdCd
		,VALD_END_DT            AS  valdEndDt
		,RANGE_START			AS 	rangeStart
		, RANGE_END				AS 	rangeEnd
	</sql>
	
	
	<!-- ??????????? -->
	<select id="getProductNumberByProdDetail" parameterType="AsPrmProductNumberByProd" resultType="AsPrmProductNumberByProd">
		SELECT
				<include refid="productNumberByProdListColumn"/>
          FROM  ABA_PD_NUM_PREFIX_BY_PROD
 		 WHERE  PROD_CD		    = #{prodCd} 
 		   AND  PREFIX_ALLOWED	= #{prefixAllowed} 
	 	   AND  VALD_STRT_DT  	= to_date(#{valdStrtDt},'yyyy-mm-dd') 
	</select>	
	<!-- ??????????? -->
	<delete id="deleteProductNumberByProd" parameterType="AsPrmProductNumberByProd">
		DELETE 	FROM ABA_PD_NUM_PREFIX_BY_PROD 
 		 WHERE  PROD_CD		    = #{prodCd} 
 		   AND  PREFIX_ALLOWED	 = #{prefixAllowed} 
	 	   AND  VALD_STRT_DT  	= to_date(#{valdStrtDt},'yyyy-mm-dd') 
	</delete>	
	<!-- ??????????? -->
	<insert id="insertProductNumberByProd" parameterType="AsPrmProductNumberByProd" >
		INSERT INTO ABA_PD_NUM_PREFIX_BY_PROD(
			 PROD_CD         
			,PREFIX_ALLOWED  
			,VALD_STRT_DT    
			,RELS_KD_CD      
			,VALD_END_DT     
		)
		VALUES(
			  #{prodCd          , jdbcType=VARCHAR}  
			, #{prefixAllowed   , jdbcType=VARCHAR}  
			, #{valdStrtDt      , jdbcType=VARCHAR}   
			, #{relsKdCd        , jdbcType=VARCHAR}  
			, #{valdEndDt       , jdbcType=VARCHAR}  
		)
	</insert>
	
	<!-- ??????????? -->
	<update id="updateProductNumberByProd" parameterType="AsPrmProductNumberByProd" >
		UPDATE ABA_PD_NUM_PREFIX_BY_PROD SET           
		  RELS_KD_CD            =  #{relsKdCd       , jdbcType=VARCHAR}   
		 ,VALD_END_DT 		    =  #{valdEndDt       , jdbcType=VARCHAR}
 		 WHERE  PROD_CD		    =  #{prodCd} 
 		   AND  PREFIX_ALLOWED	=  #{prefixAllowed} 
	 	   <!-- AND  VALD_STRT_DT  	=  to_date(#{valdStrtDt},'yyyy-mm-dd') --> 
	</update>
	
	
	<!-- ???? -->
	<sql id="productChannelListColumn">
		PROD_CD           AS prodCd
	      ,A.CH_CD             AS chCd    
	      ,TO_CHAR(VALID_STRT_DT,'YYYYMMDD') AS valdStrtDt
	      ,TO_CHAR(VALID_END_DT,'YYYYMMDD') AS valdEndDt
	      ,CH_NAME           AS chName
	      ,CH_NUM            AS chNum
	      ,QUALITY           AS quality
	      ,GRADE             AS grade
	      ,MONTHLY_FEE       AS monthlyFee
	      ,CH_STATUS         AS chStatus
	</sql>
	
	
	<!-- ???? ??? count -->
	<select id="getProductChannelListCount" parameterType="AsSearchFilter" resultType="int"> 
		SELECT
        	count(*) cnt
          FROM ABA_PD_TV_CHANNEL A
		      ,ABA_PD_TV_CHNL_BY_PROD B
	     WHERE B.CH_CD = A.CH_CD
		<if test="count > 0">
			AND
			<foreach collection="filters" separator=" AND " item="filter" index="index">
				${filter.name} = '${filter.value}' 
			</foreach>
		</if>
	</select>
	<!-- ???? ???  -->
	<select id="getProductChannelGridList" parameterType="AsSearchFilter" resultType="AsPrmProductChannel">
		SELECT
			<include refid="productChannelListColumn"/>
		FROM 	ABA_PD_TV_CHANNEL A
		      ,ABA_PD_TV_CHNL_BY_PROD B
	     WHERE B.CH_CD = A.CH_CD
         <if test="count > 0">
		AND
		<foreach collection="filters" separator=" AND " item="filter" index="index">
			${filter.name} = '${filter.value}' 
		</foreach>
	    </if>
        ORDER BY <choose><when test="sortKey != null and sortKey != ''">${sortKey} ${sortBy}</when><otherwise>VALID_STRT_DT DESC</otherwise></choose>
	</select>
	
	
	<!-- ??ftr -->
	<sql id="productFtrListColumn">
		 PROD_CD           AS prodCd
	      ,A.PROV_FTR_CD     AS provFtrCd  
	      ,A.APLY_FLAG       AS aplyFlag
	      ,NE_ID             AS neId
	      ,IS_USER_DEFINE    AS isUserDffine
	      ,IS_BSS_PROV       AS isBssProv
	      ,MAX_PARAM_CNT     AS maxParamCnt
	      ,DESCR             AS descr
	      ,COMMON_USE_FLAG   AS commonUseFag
	</sql>
	
	
	<!-- ??ftr ??? count -->
	<select id="getProductFtrListCount" parameterType="AsSearchFilter" resultType="int"> 
		SELECT
        	count(*) cnt
          FROM ABA_PD_PROV_FTR_BY_PROD A
      			,ABA_PD_PROV_FTR B
 		 WHERE B.PROV_FTR_CD = A.PROV_FTR_CD
		<if test="count > 0">
			AND
			<foreach collection="filters" separator=" AND " item="filter" index="index">
				${filter.name} = '${filter.value}' 
			</foreach>
		</if>
	</select>
	<!-- ??ftr ???  -->
	<select id="getProductFtrGridList" parameterType="AsSearchFilter" resultType="AsPrmProductFtr">
		SELECT
			<include refid="productFtrListColumn"/>
		FROM 	ABA_PD_PROV_FTR_BY_PROD A
		      ,ABA_PD_PROV_FTR B
		 WHERE B.PROV_FTR_CD = A.PROV_FTR_CD
         <if test="count > 0">
		AND
		<foreach collection="filters" separator=" AND " item="filter" index="index">
			${filter.name} = '${filter.value}' 
		</foreach>
	    </if>
        ORDER BY <choose><when test="sortKey != null and sortKey != ''">${sortKey} ${sortBy}</when><otherwise>A.PROV_FTR_CD DESC</otherwise></choose>
	</select>
	
	
	
	<select id="getProductFtrParamList" parameterType="AsPrmProductFtrParam" resultType="AsPrmProductFtrParam"> 
		SELECT 
			 A.PROV_FTR_CD         AS provFtrCd
		    ,A.PV_PARAM_ID         AS pvParamId  
		    ,A.USER_DEF_VALUE      AS userDefValue
		    ,A.PARAM_SEQ_NO        AS paramSeqNo
		    ,A.MANDATORY_FLAG      AS manatoryFlag
		    ,B.PARAM_TYPE          AS paramType
		    ,B.NE_ID               AS neId
		    ,B.DEF_VALUE           AS defValue
		    ,B.DESCR               AS descr
		 FROM 
		 	ABA_PD_PROV_PARAM_SEQ A
		   ,ABA_PD_PROV_PARAM_INFO B
		 WHERE A.PV_PARAM_ID = B.PV_PARAM_ID
		   AND A.PROV_FTR_CD = #{provFtrCd}
		 ORDER BY PARAM_SEQ_NO ASC
    </select>
    
    <select id="getProductDepositInforList" parameterType="AsPrmProductDepositInfo" resultType="AsPrmProductDepositInfo"> 
		<!-- SELECT 
			   A.DEPOSIT_SET_ID AS depositSetId
		      ,B.DEPOSIT_SET_NAME AS depositSetName
		      ,A.PROD_CD AS prodCd
		      ,A.TREATMENT AS treatment
		      ,A.GRACE_PERIOD AS gracePeriod
		      ,C.DEPOSIT_ID as depositId  
		      ,C.DEPOSIT_NAME as depositName 
		      ,C.ACCUMULATED_COUNTER as accumulatedCounter 
		      ,C.LIMIT_COUNTER as limitCounter 
		      ,C.FTR_CD					as ftrCd 
		      ,C.THRESHOLD_SCHEME       as thresholdScheme
		FROM   
			   ABA_PD_PROD_DEPOSIT   A,
		       ABA_PD_DEPOSIT        B,
		       ABA_PD_DEPOSIT_DETAIL C
		WHERE  
			  B.DEPOSIT_SET_ID = A.DEPOSIT_SET_ID
		  AND C.DEPOSIT_SET_ID = A.DEPOSIT_SET_ID
		  AND A.PROD_CD = #{prodCd,jdbcType=VARCHAR}
		  ORDER BY A.DEPOSIT_SET_ID DESC  -->
		  
		  
		  
SELECT 
       FC_LOOKUP_NAME (F.CUST_TYPE, 'CustDvCd', 'en')  as custType,
	   B.DEPOSIT_SET_NAME as depositSetName,
       C.DEPOSIT_NAME as depositName,
       NVL(F.DEPOSIT,0)	 as deposit,
       NVL(F.THRESHOLD,0) as threshold,
       NVL(F.THRESHOLD_MAX,0) as thresholdMax,
       NVL(F.THRESHOLD_UNIT,0) as  thresholdUnit --count(*) cnt 
  FROM ABA_PD_PROD_DEPOSIT A, 
       ABA_PD_DEPOSIT B, 
       ABA_PD_DEPOSIT_DETAIL C, 
       ABA_PD_THRESHOLD_MASTER D, 
       ABA_PD_THRESHOLD E, 
       ABA_PD_AMOUNT_BY_DEPOSIT F 
 WHERE B.DEPOSIT_SET_ID = A.DEPOSIT_SET_ID 
       AND A.PROD_CD = #{prodCd,jdbcType=VARCHAR}
       AND C.DEPOSIT_SET_ID = A.DEPOSIT_SET_ID 
       AND D.THRESHOLD_ID = C.THRESHOLD_SCHEME 
       AND E.THRESHOLD_ID = D.THRESHOLD_ID 
       AND F.DEPOSIT_SET_ID = A.DEPOSIT_SET_ID 
       AND F.DEPOSIT_ID = C.DEPOSIT_ID 
       AND E.LIMIT_THRESHOLD=100
       ORDER BY F.cust_type, C.DEPOSIT_NAME,  NVL(F.DEPOSIT,0)	, NVL(F.THRESHOLD,0), NVL(F.THRESHOLD_MAX,0)
     </select>
     
     <select id="getProductDepositAdjList" parameterType="AsPrmProductDepositInfo" resultType="AsPrmProductDepositInfo"> 
     
         SELECT DEPOSIT_SET_ID       AS             depositSetId ,
		        DEPOSIT_ADJ_ID       AS             depositAdjId,
		        CSTM_LEVEL           AS             cstmLevel,
		        ADJ_RATE             AS             adjRate
		   FROM ABA_PD_DEPOSIT_ADJUSTMENT
		  WHERE DEPOSIT_SET_ID = (select deposit_set_id from aba_pd_prod_deposit where prod_cd=#{prodCd})
  </select>
  
  <update id="updateByPdProduct" parameterType="AsProduct">
  	UPDATE ABA_PD_PRODUCT
	  SET BUNDLE_DEPOSIT_YN = #{bundleDepositYn} 
	    , RSV_REG_DAY = #{rsvRegDay}
	    , AUTO_EXP_DAY = #{autoExpDay}
	    , SMS_PERIOD = #{smsPeriod}
	    , PAID_CHG_DAY = #{paidChgDay}
	    , SHOT_PROD_NM = #{shotProdNm}
	    , EXT_PROD_CD = #{extProdCd}
	WHERE prod_cd = #{prodCd}
  </update>
  
  <select id="get08DailogInfo" parameterType="String" resultType="AsPrmProduct">
  	SELECT  prod_Cd as prodCd
  	        ,svc_domain AS svcDomain
  			,FC_LOOKUP_NAME(SVC_DOMAIN,'SvcDomain','en') AS svcDomainNm  
			,PROD_DV_CD AS prodDvCd
	        ,PROD_DV_CD || ' ' || FC_LOOKUP_NAME(PROD_DV_CD,'BillType','en') AS prodDvNm 
			,PROD_KD_CD AS prodKdCd
	        ,PROD_DV_CD || ' ' || FC_LOOKUP_NAME(PROD_KD_CD,'CsPrdType','en') AS prodKdNm
			,PROD_KD_DTL_CD  AS prodKdDtlCd 
	        ,PROD_DV_CD || ' ' || FC_LOOKUP_NAME(PROD_KD_DTL_CD,'PROD_KD_DTL_CD','en') AS prodKdDtlNm 
	        ,CUST_DV_CD                                  AS 		custDvCd  
        	,CUST_DV_CD || ' ' || DECODE(CUST_DV_CD,'1','Personal','Corporation') AS        custDvNm     
	  FROM ABA_PD_PRODUCT
	  WHERE prod_cd = #{prodCd}
  </select>
  
  
  <select id="getPdProductList08" parameterType="AsPrmProduct" resultType="AsPrmProduct">
	  	SELECT prod_cd AS prodCd
        	 , prod_name AS prodName
	         , mrkt_cd AS mrktCd
	         , prod_dv_cd AS prodDvCd
	         , prod_kd_cd AS prodKdCd
	         , prod_kd_dtl_cd AS prodKdDtlCd
	         , cust_dv_cd AS custDvCd
	         , version AS version
	         , sale_strt_dttm AS saleStatDttm
	         , sale_end_dttm AS saleEndDttm
	         ,PROD_DV_CD || ' ' || FC_LOOKUP_NAME(PROD_DV_CD,'BillType','en') AS prodDvNm
	          ,PROD_DV_CD || ' ' || FC_LOOKUP_NAME(PROD_KD_CD,'CsPrdType','en') AS prodKdNm
	          ,PROD_DV_CD || ' ' || FC_LOOKUP_NAME(PROD_KD_DTL_CD,'PROD_KD_DTL_CD','en') AS prodKdDtlNm
	          ,CUST_DV_CD || ' ' || DECODE(CUST_DV_CD,'1','Personal','Corporation') AS        custDvNm
	      FROM ABA_PD_PRODUCT
	      WHERE svc_domain = #{svcDomain}
	      	<if test="prodDvCd != null and prodDvCd != ''">
	        AND prod_dv_cd = #{prodDvCd}
	        </if>
	        <if test="prodKdCd != null and prodKdCd != ''">
	        AND prod_kd_cd = #{prodKdCd}
	        </if>
	        <if test="prodDpndRelsDvCd != null and prodDpndRelsDvCd != ''">
	        AND prod_cd NOT IN (SELECT trgt_prod_cd 
                                  FROM ABA_PD_PROD_DPND_RELS
            	    				where prod_dpnd_rels_dv_cd = #{prodDpndRelsDvCd}
            	    				  AND prod_cd = #{prodCd}
            	    				  AND SYSDATE BETWEEN vald_strt_dt AND vald_end_dt
            	    			)
            </if>
            order by prod_cd
  </select>
  
  <select id="getPdhProdDpndList08" parameterType="AsPrmProductDpnd"  resultType="AsPrmProductDpnd">
  		SELECT to_char(a.rels_seqno,'yyyymmddhh24missff6') as relsSeqno
  		       , a.prod_cd AS prodCd
               , a.trgt_prod_cd AS trgtProdCd
               , a.prod_dpnd_rels_dv_cd AS prodDpndSelsDvCd
               , a.rels_kd_cd AS relsKdCd
               , a.vald_strt_dt AS valdStrtDt
               , a.vald_end_dt AS valdEndDt
               , a.add_charge AS addChrge
           	   , b.PROD_NAME AS prodName
		  FROM ABA_PD_PROD_DPND_RELS a
		     , ABA_PD_PRODUCT b
		WHERE a.trgt_prod_cd = b.PROD_CD(+)
			and SYSDATE BETWEEN a.vald_strt_dt AND a.vald_end_dt 
          <if test="addChrge != null and addChrge!= ''">
          	and a.add_charge = #{addChrge}
          </if>
          <if  test="prodDpndSelsDvCd != null and prodDpndSelsDvCd != ''">
          	and a.prod_dpnd_rels_dv_cd = #{prodDpndSelsDvCd}
          </if>
          <if test="prodCd != null and prodCd != ''">
            and a.prod_cd = #{prodCd}
          </if>
         order by a.prod_cd 
  </select>
  
  <select id="getPdhProdDpndCharge08" parameterType="AsPrmProductDpnd"  resultType="AsPrmProductDpnd">
  		SELECT add_charge AS addChrge
          FROM ABA_PD_PROD_DPND_RELS
         where 1=1
            and sysdate between VALD_STRT_DT and VALD_END_DT
          <if  test="prodDpndSelsDvCd != null and prodDpndSelsDvCd != ''">
          	and prod_dpnd_rels_dv_cd = #{prodDpndSelsDvCd}
          </if>
          <if test="prodCd != null and prodCd != ''">
            and prod_cd = #{prodCd}
          </if>
          group by add_charge
          order by add_charge
  </select>
  <select id="getDiscountTable" parameterType="AsSearchFilter" resultType="AsPrmProduct">
  	select 
  	a.prod_cd as prodCd
	, a.ftr_cd as featureCd
	, (select ftr_name from aba_pd_ftr where ftr_cd = a.ftr_cd) as ftrName
	, a.rate_aply_kd_cd as rateApplyKindCd
	, FC_LOOKUP_NAME(a.rate_aply_kd_cd, 'RateAplyKdCd', 'en') as discountAplyName
	, a.rate as discountRate
	from 
		aba_pd_rate a,
	    aba_pd_product b
	where 
		a.prod_cd = b.prod_cd
    and
   		<foreach collection="filters" separator=" AND " item="filter" index="index">
			b.${filter.name} = '${filter.value}' 
		</foreach>
	and a.rate_dv_cd = '10' 
  
  </select>
  
  
  
  <select id="getPenalty" parameterType="AsSearchFilter" resultType="AsPrmPenalty">
  	SELECT 
		 A.PROD_CD 			AS prodCd
	   , A.TRGT_PROD_CD		AS trgtProdCd
	   , B.FTR_NAME 		AS featureNm
	   , A.PNLT 			AS pnlt
	FROM 
		ABA_PD_PROD_PENALTY A,
		ABA_PD_FTR B
	WHERE 
		<foreach collection="filters" separator=" AND " item="filter" index="index">
			A.${filter.name} = '${filter.value}' 
		</foreach>
	 AND B.FTR_CD = A.FTR_CD
  </select>
  
  <insert id="insertNproductDpnd" parameterType="AsPrmProductDpnd" >
		INSERT INTO ABA_PD_PROD_DPND_RELS(
		     RELS_SEQNO 
			, PROD_CD    
			,TRGT_PROD_CD
			,VALD_STRT_DT
			,PROD_DPND_RELS_DV_CD
			,RELS_KD_CD
			,VALD_END_DT
			,ADD_CHARGE
		)
		VALUES(
		      SYSTIMESTAMP 
			, #{prodCd               , jdbcType=VARCHAR}  
			, #{trgtProdCd           , jdbcType=VARCHAR}  
			, SYSDATE  
			, #{prodDpndSelsDvCd     , jdbcType=VARCHAR}
			, #{relsKdCd             , jdbcType=VARCHAR}  
			, TO_DATE('99991231','yyyymmdd')  
			, #{addChrge}
		)
	</insert>
	
  <update id="delNproductDpnd" parameterType="AsPrmProductDpnd" >
  		UPDATE ABA_PD_PROD_DPND_RELS
  		   SET VALD_END_DT = (SYSDATE - 1)
  		 WHERE rels_seqno= to_timestamp(#{relsSeqno},'yyyymmddhh24missff6') 
  </update>
  
    
  
  <select id="getProductCounterCount" parameterType="AsSearchFilter" resultType="int"> 
 SELECT count(*)cnt
  FROM aba_pd_counter_by_prod a, 
       aba_pd_counter_info b,
       aba_co_fnd_lookup_values c 
 WHERE 	
 <foreach collection="filters" separator=" AND " item="filter" index="index">
			A.${filter.name} = '${filter.value}' 
		</foreach>
       AND a.CNT_ID = b.CNT_ID 
       AND b.CNT_UNIT_CD=c.ccode 
       AND c.CCODE_GROUP='CounterUnitCd' 
       AND c.language ='en'
	
  </select>
  
    <select id="getProductCounterGridList" parameterType="AsSearchFilter" resultType="AsPrmProductRate">
  	SELECT PROD_CD as prodCd,
       CNT_GRP_NAME as cntGrpName,
       CNT_NAME as cntName,
       CNT_SCALE as cntScale,
       c.meaning as cntUint 
  FROM aba_pd_counter_by_prod a, 
       aba_pd_counter_info b,
       aba_co_fnd_lookup_values c 
 WHERE
 	<foreach collection="filters" separator=" AND " item="filter" index="index">
			A.${filter.name} = '${filter.value}' 
		</foreach>
       AND a.CNT_ID = b.CNT_ID 
       AND b.CNT_UNIT_CD=c.ccode 
       AND c.CCODE_GROUP='CounterUnitCd' 
       AND c.language ='en'
		
  </select>
  
  <select id="getChangableFromList" resultType="AsChangableProduct">
	 SELECT a.PROD_GRP_ID										AS prodGrpId
	       ,FC_LOOKUP_NAME(b.SVC_DOMAIN,'SvcDomain','en') 		AS svcDomainNm 
	   FROM ABA_PD_FROM_TO_PROD_GRP 	a, 
	        aba_pd_prod_grp 			b 
	  WHERE a.PROD_GRP_ID=b.PROD_GRP_ID 
	    AND a.FROM_TO_FLAG = '1'
  </select>
 
 	<select id="getProductFromGroupId" parameterType="AsSearchFilter" resultType="AsChangeScheme">
	 	SELECT prod_grp_id		AS prodGrpId
		  FROM aba_pd_prod_by_grp grppd
 		 WHERE
			<foreach collection="filters" separator=" AND " item="filter" index="index">
				${filter.name} = '${filter.value}' 
			</foreach>
 	</select>
 	
 	<select id="getProductToGroupId" parameterType="string" resultType="AsChangeScheme">
 	      SELECT rel2.prod_grp_id				AS prodGrpId
			FROM ABA_PD_FROM_TO_PROD_GRP rel
			    ,ABA_PD_FROM_TO_PROD_GRP rel2
		   WHERE 1=1
			 AND ( 
			 		 (rel.prod_grp_id = #{groupId} and rel.from_to_flag = '1')
			 	 AND rel2.from_to_flag = '2'
             	 AND rel.change_scheme_id = rel2.change_scheme_id
				)
 	
 	</select>
 	
 	<resultMap type="AsChangeScheme" 		   	id="rsltMapChangeScheme">
		<id 	column="prodGrpId" 				property="prodGrpId"	   		/>
		<result column="changeSchemeId"       	property="changeSchemeId"  		/>
		<result column="changeSchemeName"     	property="changeSchemeName"		/>
		<result column="svcDomain"             	property="svcDomain"       		/>
		<result column="billType"             	property="billType"        		/>
		<result column="changeFee"             	property="changeFee"       		/>
		<result column="firstChangeFeeFree"  	property="firstChangeFeeFree"   />
		<result column="activeOptions"         	property="activeOptions"        />
		<result column="activeNdays"           	property="activeNdays"          />
		<result column="activeFixedDate"      	property="activeFixedDate"      />
		<result column="graceOptions"          	property="graceOptions"         />
		<result column="graceNdays"           	property="graceNdays"           />
		<result column="graceFixedDate"       	property="graceFixedDate"       />
		<collection property="productList" 		ofType="AsProduct">
			<result column="grpProdCd" 			property="prodCd"          /> 
			<result column="grpProdName" 		property="prodName"        /> 			
		</collection>
		<collection property="vasList" 		ofType="AsProduct">
			<result column="varProdCd" 			property="prodCd"          /> 
			<result column="vasProdName" 		property="prodName"        /> 			
		</collection>
	</resultMap>
 	
 	<select id="getProductAllList" parameterType="string" resultMap="rsltMapChangeScheme">
		SELECT  schme.CHANGE_SCHEME_ID				AS changeSchemeId
		       ,schme.CHANGE_SCHEME_NAME			AS changeSchemeName
		       ,schme.SVC_DOMAIN					AS svcDomain
		       ,schme.BILL_TYPE						AS billType
		       ,schme.CHANGE_FEE					AS changeFee
		       ,schme.FIRST_CHANGE_FEE_FREE			AS firstChangeFeeFree
		       ,schme.ACTIVE_OPTIONS				AS activeOptions
		       ,schme.ACTIVE_NDAYS					AS activeNdays
		       ,schme.ACTIVE_FIXED_DATE				AS activeFixedDate
		       ,schme.GRACE_OPTIONS					AS graceOptions
		       ,schme.GRACE_NDAYS					AS graceNdays
		       ,schme.GRACE_FIXED_DATE				AS graceFixedDate
		       
		       ,rel.prod_grp_id						AS prodGrpId
		       ,prod.prod_cd 						AS grpProdCd
		       ,prod.prod_name 						AS grpProdName
		       ,tranf.PROD_CD						AS varProdCd
		       ,prod2.PROD_NAME						AS vasProdName
		  FROM ABA_PD_FROM_TO_PROD_GRP rel , 
		       aba_pd_prod_by_grp grppd, 
		       aba_pd_product prod, 
		       aba_pd_product prod2,
		       aba_pd_prod_change_scheme schme ,
		       ABA_PD_PROD_CHANGE_TRANF_SUB tranf
		 WHERE 1=1 
		       AND rel.prod_grp_id = #{groupId}
		       AND rel.from_to_flag = '2' 
		       AND grppd.prod_grp_id = rel.prod_grp_id 
		       AND grppd.prod_cd = prod.prod_cd 
		       AND rel.change_scheme_id = schme.change_scheme_id 	
		       AND tranf.change_scheme_id = rel.change_scheme_id
		       AND prod2.prod_cd = tranf.PROD_CD
 	</select>


 <select id="getCugNeedMemberProduct" parameterType="String" resultType="String">
		SELECT
				DECODE(CUG_NEED_MEMBER_PRODUCT, 'Y', 'Y', 'N')  AS cugNeedMemberProduct
          FROM  ABA_PD_PRODUCT
		 WHERE  PROD_CD = #{prodCd}
	</select>	
	
	
	 <select id="getResubscription" parameterType="String" resultType="String">
		SELECT
				NVL(RESUBSCRIPTION_FLAG, 0)  AS resubscription
          FROM  ABA_PD_PRODUCT
		 WHERE  PROD_CD = #{prodCd}
	</select>
	
 	
 	
  <select id="countNextJoin" parameterType="AsProduct" resultType="int">
 	SELECT COUNT(*) as cnt
	  FROM ABA_SB_SVC_BY_ENTR A,
	       ABA_PD_PRODUCT B 
	 WHERE ENTR_NO = #{entrNo}
	   AND ENTR_SVC_SEQNO =  #{entrSvcSeqno}
	   AND A.PROD_CD = B.PROD_CD
	   AND A.SVC_STTS_CD = 'A'
	   AND B.NEXT_JOIN_PRODUCT = #{pchProdCd}
	   AND B.NEXT_JOIN_CONFIRM  = '1'   
   </select>
   
   
   <select id="countRsvC17" parameterType="AsPrmProduct" resultType="int">
	SELECT COUNT(*) as cnt
	 FROM ABA_PD_PRODUCT a,
	      ABA_PD_CHNL_BY_PROD b
	 WHERE A.PROD_CD =b.PROD_CD
	   AND A.PROD_CD = #{prodCd}
	   AND SALE_CHNL_CD = '1001000111'  
   </select>
   <select id="getFeatureInfo" parameterType="String" resultType="AsFeatureCode">
   		SELECT 
   			  ftr_cd featureCode
   			, ftr_kd_cd featureKdCd
   			, ftr_name featureName
   		FROM aba_pd_ftr
		WHERE ftr_cd = #{ftrCd}
   </select>

</mapper>