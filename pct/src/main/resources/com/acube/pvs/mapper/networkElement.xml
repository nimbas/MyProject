<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">  
<mapper namespace="com.acube.pvs.mapper.NeRepository">
	<sql id="CommonSearchFilterQueryGeneration">
		<if test="filterCount > 0">
		 	AND (
		 	<choose>
		 	<when test="filterOper != null and filterOper.groupOp eq 'OR'">
		 		<foreach collection="searchFilters" separator="OR" item="filter" index="index">
					<choose><when test='filter.type eq "=" or filter.type eq "!=" or filter.type eq "IN" or filter.type eq "NOT IN"'>${filter.name}</when><otherwise>UPPER(${filter.name})</otherwise></choose> ${filter.type} <choose><when test='filter.type eq "=" or filter.type eq "!="'>#{filter.value}</when><otherwise>${filter.value}</otherwise></choose> 
				</foreach>
		 	</when>
		 	<otherwise>
		 		<foreach collection="searchFilters" separator="AND" item="filter" index="index">
					<choose><when test='filter.type eq "=" or filter.type eq "!=" or filter.type eq "IN" or filter.type eq "NOT IN"'>${filter.name}</when><otherwise>UPPER(${filter.name})</otherwise></choose> ${filter.type} <choose><when test='filter.type eq "=" or filter.type eq "!="'>#{filter.value}</when><otherwise>${filter.value}</otherwise></choose> 
				</foreach>
		 	</otherwise>
		 	</choose>
		 	)
		</if>
	</sql>
	
	<resultMap id="BaseResultMap" type="AsPsProvNeInfo" >
    <id column="NE_ID" property="neId" jdbcType="VARCHAR" />
    <result column="SVC_DOMAIN" property="svcDomain" jdbcType="VARCHAR" />
    <result column="SRC_TRGT_IND" property="srcTrgtInd" jdbcType="VARCHAR" />
    <result column="IP_ADDR" property="ipAddr" jdbcType="VARCHAR" />
    <result column="PORT_NO" property="portNo" jdbcType="INTEGER" />
    <result column="SCND_IP_ADDR" property="scndIpAddr" jdbcType="VARCHAR" />
    <result column="SCND_PORT_NO" property="scndPortNo" jdbcType="INTEGER" />
    <result column="USER_ID" property="userId" jdbcType="VARCHAR" />
    <result column="PASSWD" property="passwd" jdbcType="VARCHAR" />
    <result column="MGMT_BAND" property="mgmtBand" jdbcType="VARCHAR" />
    <result column="SYS_CREATION_DATE" property="sysCreationDate" jdbcType="TIMESTAMP" />
    <result column="SYS_UPDATE_DATE" property="sysUpdateDate" jdbcType="TIMESTAMP" />
    <result column="OPERATOR_ID" property="operatorId" jdbcType="VARCHAR" />
    <result column="APPLICATION_ID" property="applicationId" jdbcType="VARCHAR" />
    <result column="DL_SERVICE_CODE" property="dlServiceCode" jdbcType="VARCHAR" />
    <result column="DL_UPDATE_STAMP" property="dlUpdateStamp" jdbcType="INTEGER" />
  </resultMap>
	<sql id="Base_Column_List" >
	    NE_ID, SVC_DOMAIN, SRC_TRGT_IND, IP_ADDR, PORT_NO, SCND_IP_ADDR, SCND_PORT_NO, USER_ID, 
	    REGEXP_REPLACE(passwd, '.', '*') PASSWD, MGMT_BAND, SYS_CREATION_DATE, SYS_UPDATE_DATE, OPERATOR_ID, APPLICATION_ID, 
	    DL_SERVICE_CODE, DL_UPDATE_STAMP
	</sql>
	
	<select id="getProvNeInfos" parameterType="AsSearchFilter" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List"/>
		FROM aba_ps_prov_ne_info
		WHERE 1=1
		<include refid="CommonSearchFilterQueryGeneration"/>
		
	</select>
	
	<select id="getProvNeInfo" parameterType="AsPsProvNeInfo" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List"/>
		FROM aba_ps_prov_ne_info
		WHERE ne_id = #{neId}
	</select>
	
	<insert id="addProvNeInfo" parameterType="AsPsProvNeInfo">
		INSERT INTO aba_ps_prov_ne_info (
			ne_id, svc_domain, src_trgt_ind, 
		    ip_addr, port_no, scnd_ip_addr, 
		    scnd_port_no, user_id, passwd, 
		    mgmt_band, sys_creation_date, sys_update_date, 
		    operator_id, application_id, dl_service_code, 
		    dl_update_stamp
		) VALUES (
		    #{neId,jdbcType=VARCHAR}, #{svcDomain,jdbcType=VARCHAR}, #{srcTrgtInd,jdbcType=VARCHAR}, 
		    #{ipAddr,jdbcType=VARCHAR}, #{portNo,jdbcType=INTEGER}, #{scndIpAddr,jdbcType=VARCHAR}, 
		    #{scndPortNo,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, #{passwd,jdbcType=VARCHAR}, 
		    #{mgmtBand,jdbcType=VARCHAR}, #{sysCreationDate,jdbcType=TIMESTAMP}, #{sysUpdateDate,jdbcType=TIMESTAMP}, 
		    #{operatorId,jdbcType=VARCHAR}, #{applicationId,jdbcType=VARCHAR}, #{dlServiceCode,jdbcType=VARCHAR}, 
		    #{dlUpdateStamp,jdbcType=INTEGER}
		)
	</insert>
			
	<update id="updateProveNeInfo" parameterType="AsPsProvNeInfo">
		UPDATE aba_ps_prov_ne_info
	    SET 
	    	SVC_DOMAIN 		= #{svcDomain,jdbcType=VARCHAR},
	        SRC_TRGT_IND 	= #{srcTrgtInd,jdbcType=VARCHAR},
	        IP_ADDR 		= #{ipAddr,jdbcType=VARCHAR},
	        PORT_NO 		= #{portNo,jdbcType=INTEGER},
	        SCND_IP_ADDR 	= #{scndIpAddr,jdbcType=VARCHAR},
	        SCND_PORT_NO 	= #{scndPortNo,jdbcType=INTEGER},
	        USER_ID 		= #{userId,jdbcType=VARCHAR},
	        <if test="passwd != null and passwd != ''">
	        PASSWD 			= #{passwd,jdbcType=VARCHAR},
	        </if>
	        MGMT_BAND 		= #{mgmtBand,jdbcType=VARCHAR},
	        SYS_UPDATE_DATE = #{sysUpdateDate,jdbcType=TIMESTAMP},
	        OPERATOR_ID 	= #{operatorId,jdbcType=VARCHAR},
	        APPLICATION_ID 	= #{applicationId,jdbcType=VARCHAR},
	        DL_SERVICE_CODE = 'updateProveNeInfo'
	     WHERE ne_id = #{neId}
	</update>
	
	<delete id="deleteProveNeInfo" parameterType="AsPsProvNeInfo">
		DELETE FROM aba_ps_prov_ne_info a
		WHERE ne_id = #{neId}
		AND NOT EXISTS (
			SELECT ne_id FROM aba_ps_prov_ftr WHERE ne_id = a.ne_id
			UNION SELECT ne_id FROM aba_ps_prov_param_info WHERE ne_id = a.ne_id
			UNION SELECT ne_id FROM aba_ps_prov_cmd WHERE ne_id = a.ne_id
			UNION SELECT ne FROM aba_ps_param_map where (ne  = a.ne_id OR to_ne  = a.ne_id)
			UNION SELECT src_ne_id FROM aba_ps_prov_map_list WHERE src_ne_id = a.ne_id  			
		) <!-- ftr, param, cmd에 맵핑된경우 삭제불가 -->
	</delete>
</mapper>
