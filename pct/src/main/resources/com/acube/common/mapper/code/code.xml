<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">  
<mapper namespace="com.acube.common.mapper.code.CodeRepository">
	<sql id="codeColumn">
		  ccode_group         AS codeGroup       
		, language            AS language         
		, ccode         	  AS code       
		, meaning             AS meaning          
		, description         AS description      
		, enabled_flag        AS enabledFlag     
		, start_date_active   AS startDateActive  
		, end_date_active     AS endDateActive    
		, created_by          AS createdBy        
		, creation_date       AS creationDate     
		, last_updated_by     AS lastUpdatedBy    
		, last_update_date    AS lastUpdateDate   
		, source_lang         AS sourceLang       
		, security_group_id   AS securityGroupId  
		, application_id 	  AS applicationId
		, svc_domain		  AS svcDomain
		, sub_grp1			  AS subGrp1
		, sub_grp2			  AS subGrp2
	</sql>
		
	<select id="getCode" parameterType="AsLookupCode" resultType="AsLookupCode">
		SELECT
		<include refid="codeColumn"/>
		FROM aba_co_fnd_lookup_values
		WHERE ccode_group = #{codeGroup}
		AND ccode   = #{code}
		AND language      = #{language}
		ORDER BY ccode
	</select>
	
	<select id="getCodeTypeList" parameterType="string" resultType="AsLookupCode">
		SELECT
		DISTINCT ccode_group         AS codeGroup       
		FROM aba_co_fnd_lookup_values
		WHERE language      = #{language}
		ORDER BY ccode_group
	</select>
	
	<select id="getCodeList" parameterType="AsLookupCode" resultType="AsLookupCode">
		SELECT
		<include refid="codeColumn"/>
		FROM aba_co_fnd_lookup_values
		WHERE ccode_group = #{codeGroup}
		<choose><when test="language neq 'ALL'">AND language = #{language}</when></choose>
		<if test="not manageFlag">
		AND enabled_flag = '1'
		AND 'NA' = (
			CASE
			WHEN start_date_active IS NULL AND end_date_active IS NULL THEN 'NA'
		    WHEN start_date_active IS NULL AND end_date_active IS NOT NULL AND TO_CHAR(SYSDATE, 'YYYYMMDD') &lt; TO_CHAR(end_date_active, 'YYYYMMDD') THEN 'NA'
		    WHEN start_date_active IS NOT NULL AND start_date_active &lt; SYSDATE AND end_date_active IS NULL THEN  'NA'
		    WHEN start_date_active IS NOT NULL AND start_date_active &lt; SYSDATE AND end_date_active IS NOT NULL AND TO_CHAR(SYSDATE, 'YYYYMMDD') &lt; TO_CHAR(end_date_active, 'YYYYMMDD') THEN 'NA'
		    ELSE 'NO'
			END
		)
		</if>
		ORDER BY ccode
	</select>
	
	<select id="getAllCodeList" resultType="AsLookupCode">
		SELECT
		<include refid="codeColumn"/>
		FROM aba_co_fnd_lookup_values
		WHERE enabled_flag = '1'
		AND 'NA' = (
			CASE
			WHEN start_date_active IS NULL AND end_date_active IS NULL THEN 'NA'
		    WHEN start_date_active IS NULL AND end_date_active IS NOT NULL AND TO_CHAR(SYSDATE, 'YYYYMMDD') &lt; TO_CHAR(end_date_active, 'YYYYMMDD') THEN 'NA'
		    WHEN start_date_active IS NOT NULL AND start_date_active &lt; SYSDATE AND end_date_active IS NULL THEN  'NA'
		    WHEN start_date_active IS NOT NULL AND start_date_active &lt; SYSDATE AND end_date_active IS NOT NULL AND TO_CHAR(SYSDATE, 'YYYYMMDD') &lt; TO_CHAR(end_date_active, 'YYYYMMDD') THEN 'NA'
		    ELSE 'NO'
			END
		)
		ORDER BY ccode_group, language, ccode
	</select>
	
	<!-- 
	===== Code Management Section =====
	Create by JG
	2015.03.11 
	-->
	
	<select id="getAllCodeMgtList" resultType="AsLookupCode">
		SELECT
		<include refid="codeColumn"/>
		FROM aba_co_fnd_lookup_values
		ORDER BY ccode_group, language, ccode
	</select>
	
	<select id="getSingleCodeMgtData" parameterType="AsLookupCode" resultType="AsLookupCode">
		SELECT
		<include refid="codeColumn"/>
		FROM aba_co_fnd_lookup_values
		WHERE ccode_group = #{codeGroup}
		AND ccode = #{code}
		<if test="_parameter == null">AND language = #{language}</if>
		ORDER BY language
	</select>
	
	<select id="getCodeGroupMgtData" parameterType="AsLookupCode" resultType="AsLookupCode">
		SELECT
		<include refid="codeColumn"/>
		FROM aba_co_fnd_lookup_values
		WHERE ccode_group = '00'
		<if test="language != null">AND language = #{language}</if>
	</select>
	
	<select id="getAllCodeMgtListforTreeView"  parameterType="string" resultType="AsLookupCode">
		select
		parent_meaning	  AS parentMeaning
		, ccode_group         AS codeGroup       
		, language            AS language         
		, ccode         	  AS code       
		, meaning             AS meaning          
		, description         AS description      
		, enabled_flag        AS enabledFlag     
		, start_date_active   AS startDateActive  
		, end_date_active     AS endDateActive    
		, created_by          AS createdBy        
		, creation_date       AS creationDate     
		, last_updated_by     AS lastUpdatedBy    
		, last_update_date    AS lastUpdateDate   
		, source_lang         AS sourceLang       
		, security_group_id   AS securityGroupId  
		, application_id 	  AS applicationId
		, svc_domain		  AS svcDomain
		, sub_grp1			  AS subGrp1
		, sub_grp2			  AS subGrp2
		
			from (
			select * from(
			   select a.parent_meaning,b.* 
			         ,ROW_NUMBER() OVER(PARTITION BY b.CCODE_GROUP,b.CCODE ORDER BY
			         <choose> 
			         	<when test="_parameter == 'ko'">
			         		decode(b.language,'ko','1','en','2','mn','3','4')) ord_no
			         	</when>
			         	<when test="_parameter == 'en'">
			         		decode(b.language,'en','1','2')) ord_no
			         	</when>
			         	<otherwise>
			         		decode(b.language,#{language},'1','en','2','3')) ord_no
			         	</otherwise>
			         </choose>
			   from (  
			           select CCODE_GROUP,CCODE parent_ccode,MEANING parent_meaning
			                  ,ROW_NUMBER() OVER(PARTITION BY CCODE_GROUP,CCODE  ORDER BY 
			                  <choose> 
					         	<when test="_parameter == 'ko'">
					         		decode(language,'ko','1','en','2','mn','3','4')) ord_no
					         	</when>
					         	<when test="_parameter == 'en'">
					         		decode(language,'en','1','2')) ord_no
					         	</when>
					         	<otherwise>
					         		decode(language,#{language},'1','en','2','3')) ord_no
					         	</otherwise>
					         </choose>
			             from aba_co_fnd_lookup_values 
			            where CCODE_GROUP = '00' 
			        ) a
			       ,aba_co_fnd_lookup_values b
			   where a.parent_ccode = b.CCODE_GROUP
			     AND A.ord_no = 1
			)
			where ord_no = 1
			union
			select a.* from(
			select '' as parent_meaning, b.*,ROW_NUMBER() OVER(PARTITION BY CCODE_GROUP,CCODE  ORDER BY 
			<choose> 
				<when test="_parameter == 'ko'">
			   		decode(language,'ko','1','en','2','mn','3','4')) ord_no
			   	</when>
			   	<when test="_parameter == 'en'">
			   		decode(language,'en','1','2')) ord_no
			   	</when>
			   	<otherwise>
			   		decode(language,#{language},'1','en','2','3')) ord_no
			   	</otherwise>
			</choose> 
			from aba_co_fnd_lookup_values b where CCODE_GROUP = '00') a where ord_no = '1'
			) order by ccode_group, ccode
	</select>
	
	<insert id="addSingleCodeMgtData"  parameterType="AsLookupCode">
	INSERT INTO aba_co_fnd_lookup_values(
		ccode_group       
		, language         
		, ccode       
		, meaning          
		, description      
		, enabled_flag
		, start_date_active  
		, end_date_active    
		, created_by        
		, creation_date     
		, last_updated_by    
		, last_update_date   
		, source_lang       
		, security_group_id  
		, application_id
		, svc_domain
		, sub_grp1
		, sub_grp2
	)VALUES(
		#{codeGroup				,jdbcType=VARCHAR}
		, #{language			,jdbcType=VARCHAR}
		, #{code				,jdbcType=VARCHAR}
		, #{meaning				,jdbcType=VARCHAR}
		, #{description			,jdbcType=VARCHAR}
		, #{enabledFlag			,jdbcType=VARCHAR}
		, #{startDateActive		,jdbcType=TIMESTAMP}
		, #{endDateActive		,jdbcType=TIMESTAMP}
		, #{createdBy			,jdbcType=VARCHAR}
		, #{creationDate		,jdbcType=TIMESTAMP}
		, #{createdBy		,jdbcType=VARCHAR}
		, #{creationDate		,jdbcType=TIMESTAMP}
		<choose>
			<when test="sourceLang != null">
			, #{sourceLang			,jdbcType=VARCHAR}
			</when>
			<otherwise>
			,'en'
			</otherwise>
		</choose>
		<choose>
			<when test="securityGroupId != null">
			, #{securityGroupId		,jdbcType=VARCHAR}
			</when>
			<otherwise>
			,'SEC_ID'
			</otherwise>
		</choose>
		<choose>
			<when test="applicationId != null">
			, #{applicationId		,jdbcType=VARCHAR}
			</when>
			<otherwise>
			,'regCode'
			</otherwise>
		</choose>
		, #{svcDomain			,jdbcType=VARCHAR}
		, #{subGrp1				,jdbcType=VARCHAR}
		, #{subGrp2				,jdbcType=VARCHAR}
	)
	</insert>
	
	<update id="updateSingleCodeMgtData" parameterType="AsLookupCode">
	UPDATE aba_co_fnd_lookup_values
	SET
	meaning 			= #{meaning				,jdbcType=VARCHAR}
	, description 		= #{description			,jdbcType=VARCHAR}
	, enabled_flag 		= #{enabledFlag			,jdbcType=VARCHAR}
	, start_date_active	= #{startDateActive		,jdbcType=TIMESTAMP}
	, end_date_active	= #{endDateActive		,jdbcType=TIMESTAMP}
	, last_updated_by	= #{lastUpdatedBy		,jdbcType=VARCHAR}
	, last_update_date	= #{lastUpdateDate		,jdbcType=TIMESTAMP}
	
	<choose>
		<when test="sourceLang != null">
		, source_lang		= #{sourceLang			,jdbcType=VARCHAR}
		</when>
		<otherwise>
		, source_lang		= 'en'
		</otherwise>
	</choose>
	<choose>
		<when test="securityGroupId != null">
		, security_group_id	= #{securityGroupId		,jdbcType=VARCHAR}
		</when>
		<otherwise>
		, security_group_id	= 'SEC_ID'
		</otherwise>
	</choose>
	<choose>
		<when test="applicationId != null">
		, application_id	= #{applicationId		,jdbcType=VARCHAR}
		</when>
		<otherwise>
		, application_id	= 'regCode'
		</otherwise>
	</choose>
	, svc_domain		= #{svcDomain			,jdbcType=VARCHAR}
	, sub_grp1			= #{subGrp1				,jdbcType=VARCHAR}
	, sub_grp2			= #{subGrp2				,jdbcType=VARCHAR}
	WHERE ccode_group = #{codeGroup}
	AND ccode = #{code}
	AND language = #{language}
	</update>
	
	<delete id="deleteCodeMgtData"  parameterType="AsLookupCode">
	DELETE aba_co_fnd_lookup_values
	WHERE ccode_group = #{codeGroup}
	<if test="code != null">AND ccode = #{code}</if>
	<if test="language != null">AND language = #{language}</if>
	</delete>
</mapper>

